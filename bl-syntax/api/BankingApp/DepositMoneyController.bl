RESTController DepositMoneyController () { // The command bus will be set from the module context
    method: REST.Methods.POST;
    context: {
      boundedContext: 'Banking';
      module: 'Banking';
    }

    execute(request, response) {
      const amount = request.body.amount;
      const accountId = request.body.accountId;
  
      const command = DepositMoneyCommand.create({
          amount: amount,
          accountId: accountId,
      });
      
      const result = this.commandBus.request(command); // Does request sound good?(instead of sendAndGetResponse)
  
      if (result is Error) {
        switch (result.getClass()) {
          case DomainErrors.InvalidMonetaryValue: {
            this.badRequest(response, result.value);
            break;
          }
          default: {
            this.fail(response, result.message);
          }
        }
      } else {
        this.created(response);
      }
    }
  }
  

  export type TRESTController = {
    RESTController: TParameterList & {
      serverType?: TServerType;
      RESTControllerIdentifier: TRESTControllerIdentifier;
      method: TRestMethods;
      execute: TRESTControllerExecute;
    };
  };
