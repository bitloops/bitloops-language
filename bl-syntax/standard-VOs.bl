// Evaluation in TS
// const currency = Domain.StandardVO.Currency.Value.create({ currencyCode: data.balance.currency, }).value 

// Evaluation in BL
// const currency = StandardVO.Currency.create({ currencyCode: data.balance.currency, })

Props MoneyProps {

  StandardVO.Currency currency;
  float amount;
}
ValueObject MoneyVO {
    
 constructor(props: MoneyProps): (OK(MoneyVO), Errors(DomainErrors.InvalidMonetaryValue /*| StandardVO.Currency.Errors*/)) {
  // this will be created in the command handler by the user  
  // const errorOk = Currency.create(props.currency)
  //   if (errorOk.isError()) {
  //     return errorOk
  //   }


    applyRules(AmountIsPositiveNumberRule(props.amount.toString()), BalanceAmountOutOfBoundsRule(props.amount))
  }
}
 