// Works for Domain Event and Integration Event
EventHandler SendEmailAfterMoneyDepositedHandler {
  //should we support use case as dependency
  // If Subscribed to integration-event, we need to define what version
  //and get the eventTopic to subscribe from it
  version: 'v1'
  
  //Should we have void as return type for visibility
  handle(event: MoneyDepositedToAccountDomainEvent) {
    const account = event.account;
    const accountId = account.id;

    //TODO revesit 
    const getCustomerQuery = GetCustomerByAccountIdQuery.create(accountId.toString());
    const customerQueryResult = this.queryBus.query(
      getCustomerQuery,
    );
    if (customerQueryResult is Error) {
      return;
    }
    const email = customerQueryResult.email;

    const command = new SendEmailVerificationCommand({ accountId: accountId.toString(), email });

    await this.commandBus.send(command);
  }
}
  
//1. In TS we can check if query bus/command bus are unused and not include them in the dependencies
//2. In IntermediateAST -> CompleteAST we need to find the type of customerQueryResult
