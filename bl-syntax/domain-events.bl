DomainEvent AccountCreatedDomainEvent<AccountEntity> {
    //Optional?
    eventName: 'ACCOUNT_CREATED';

    //default
    // getEventTopic() {
    //     return AccountCreated.eventName;
    // }
}

//Should also be added in:  
//1. Aggregate create when new object  -> account.addDomainEvent(new AccountCreated(account));
//2. dispatchEvent method call in repository mutation methods -> dispatchEventsCallback
//3. Subscriptions in domain events should be set in order to be registered

Root Entity AccountEntity {
    constructor(props: TodoProps): (OK(AccountEntity), Errors()) {
        const isNew = props.id != null;
        if (isNew) {
            this.addDomainEvent(AccountCreatedDomainEvent.create());
            // or this?
            this.addDomainEvent(AccountCreatedDomainEvent);
        }
    }

    public incrementVersion(): void {
        this.version+= 1;
    }

}

