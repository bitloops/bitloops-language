"use strict";(self.webpackChunkbitloops_com_docs=self.webpackChunkbitloops_com_docs||[]).push([[9962],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(r),h=a,g=d["".concat(p,".").concat(h)]||d[h]||u[h]||o;return r?n.createElement(g,l(l({ref:t},c),{},{components:r})):n.createElement(g,l({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5790:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_label:"GraphQLController",title:"GraphQLController - Basic Syntax",description:"GraphQLController syntax on Bitloops Language - GraphQLController is a controller specifically for GraphQL which Bitloops has defined up-front.",keywords:["bitloops","bitloops language","basic syntax","programming language","variables","types","objects","data types","classes","interfaces","modules","functions","loops","services","GraphQLController"]},l="GraphQLController",i={unversionedId:"reference/graphql-controller",id:"reference/graphql-controller",title:"GraphQLController - Basic Syntax",description:"GraphQLController syntax on Bitloops Language - GraphQLController is a controller specifically for GraphQL which Bitloops has defined up-front.",source:"@site/docs/reference/graphql-controller.md",sourceDirName:"reference",slug:"/reference/graphql-controller",permalink:"/docs/bitloops-language/reference/graphql-controller",draft:!1,editUrl:"https://github.com/bitloops/bitloops-language/edit/main/documentation/docs/reference/graphql-controller.md",tags:[],version:"current",frontMatter:{sidebar_label:"GraphQLController",title:"GraphQLController - Basic Syntax",description:"GraphQLController syntax on Bitloops Language - GraphQLController is a controller specifically for GraphQL which Bitloops has defined up-front.",keywords:["bitloops","bitloops language","basic syntax","programming language","variables","types","objects","data types","classes","interfaces","modules","functions","loops","services","GraphQLController"]},sidebar:"tutorialSidebar",previous:{title:"Features",permalink:"/docs/bitloops-language/reference/features"},next:{title:"IntegrationEvent",permalink:"/docs/bitloops-language/reference/integration-event"}},p={},s=[{value:"<strong><code>controller-graphql.bl</code></strong>",id:"controller-graphqlbl",level:4},{value:"Operation type",id:"operation-type",level:3},{value:"Return values and error-handling",id:"return-values-and-error-handling",level:3}],c={toc:s};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"graphqlcontroller"},"GraphQLController"),(0,a.kt)("p",null,"GraphQL Controllers act like a resolver, while also defining their schema. You define the operation input which must be a DTO declared inside the same module with the Controller."),(0,a.kt)("p",null,"It is also necessary to define the ",(0,a.kt)("a",{parentName:"p",href:"#operation-type"},"operation type")," of the controller, as a result defining the interaction of the controller with the GraphQL clients."),(0,a.kt)("h4",{id:"controller-graphqlbl"},(0,a.kt)("strong",{parentName:"h4"},(0,a.kt)("inlineCode",{parentName:"strong"},"controller-graphql.bl"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"GraphQLController HelloWorldGQLController () {\n  operation: GraphQL.Operations.Query;\n  input: HelloWorldRequestDTO;\n\n  execute (request): HelloWorldResponseDTO {\n    const response = HelloWorldResponseDTO({\n        message: 'Hello World!'\n    })\n    return this.ok(response);\n  }\n}\n")),(0,a.kt)("p",null,"It is important that you return a value, either success or error, otherwise the operation will fail."),(0,a.kt)("h3",{id:"operation-type"},"Operation type"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"OperationType"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"GraphQL.Operations.Query"),(0,a.kt)("td",{parentName:"tr",align:null},"a read\u2010only fetch.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"GraphQL.Operations.Mutation"),(0,a.kt)("td",{parentName:"tr",align:null},"a write followed by a fetch.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"GraphQL.Operations.Subscription"),(0,a.kt)("td",{parentName:"tr",align:null},"a long\u2010lived request that fetches data in response to source events.")))),(0,a.kt)("h3",{id:"return-values-and-error-handling"},"Return values and error-handling"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"OperationType"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"this.ok(DTO)"),(0,a.kt)("td",{parentName:"tr",align:null},"regular response for success")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"this.clientError(message?: string)"),(0,a.kt)("td",{parentName:"tr",align:null},"UserInputError")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"this.unauthorized(message?: string)"),(0,a.kt)("td",{parentName:"tr",align:null},"AuthenticationError")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"this.forbidden(message?: string)"),(0,a.kt)("td",{parentName:"tr",align:null},"ForbiddenError")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"this.fail(error: Error ","|"," string)"),(0,a.kt)("td",{parentName:"tr",align:null},"ApolloError")))))}u.isMDXComponent=!0}}]);