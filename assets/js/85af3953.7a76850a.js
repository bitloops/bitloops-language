"use strict";(self.webpackChunkbitloops_com_docs=self.webpackChunkbitloops_com_docs||[]).push([[1497],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>f});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(o),f=n,g=d["".concat(s,".").concat(f)]||d[f]||c[f]||a;return o?r.createElement(g,l(l({ref:t},u),{},{components:o})):r.createElement(g,l({ref:t},u))}));function f(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var p=2;p<a;p++)l[p]=o[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,o)}d.displayName="MDXCreateElement"},9028:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=o(7462),n=(o(7294),o(3905));const a={sidebar_position:1,sidebar_label:"Create a ToDo App",title:"Bitloops Tutorial - Create a ToDo App using Bitloops",description:"Learn how to build a ToDo app quickly and efficiently using Bitloops. You'll learn how to apply industry best practices and software design principles that lead to high-quality software",keywords:["bitloops","bitloops tutorial","todo app","learning programming","learning coding","software development","better programming"]},l="Create a ToDo App",i={unversionedId:"tutorials/building-todo-app",id:"tutorials/building-todo-app",title:"Bitloops Tutorial - Create a ToDo App using Bitloops",description:"Learn how to build a ToDo app quickly and efficiently using Bitloops. You'll learn how to apply industry best practices and software design principles that lead to high-quality software",source:"@site/docs/tutorials/building-todo-app.md",sourceDirName:"tutorials",slug:"/tutorials/building-todo-app",permalink:"/docs/bitloops-language/tutorials/building-todo-app",draft:!1,editUrl:"https://github.com/bitloops/bitloops-language/edit/main/documentation/docs/tutorials/building-todo-app.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Create a ToDo App",title:"Bitloops Tutorial - Create a ToDo App using Bitloops",description:"Learn how to build a ToDo app quickly and efficiently using Bitloops. You'll learn how to apply industry best practices and software design principles that lead to high-quality software",keywords:["bitloops","bitloops tutorial","todo app","learning programming","learning coding","software development","better programming"]},sidebar:"tutorialSidebar",previous:{title:"Tutorials",permalink:"/docs/bitloops-language/category/tutorials"},next:{title:"FAQs",permalink:"/docs/bitloops-language/faqs"}},s={},p=[{value:"Project structure",id:"project-structure",level:2},{value:"setup.bl file",id:"setupbl-file",level:3},{value:"Format",id:"format",level:4},{value:"Language configuration (optional)",id:"language-configuration-optional",level:5},{value:"Router definition (REST)",id:"router-definition-rest",level:5},{value:"Server expression (REST)",id:"server-expression-rest",level:5},{value:"controller.bl file",id:"controllerbl-file",level:3},{value:"Format",id:"format-1",level:4},{value:"Controller expression (REST)",id:"controller-expression-rest",level:5}],u={toc:p};function c(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"create-a-todo-app"},"Create a ToDo App"),(0,n.kt)("p",null,"Creating a To Do App as example"),(0,n.kt)("h2",{id:"project-structure"},"Project structure"),(0,n.kt)("p",null,"BL needs an input folder with a setup.bl file and the essential controllers of the use cases which will be transpiled."),(0,n.kt)("p",null,"The structure of the input folder must be as the following:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"\ud83d\udce6 .\n \u2523 \ud83d\udcc2To Do App\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0# Bounded Context Name\n \u2503 \u2517 \ud83d\udcc2To Do\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0# Module Name\n \u2503 \u2503 \u2517 \ud83d\udcc2Use Cases\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0# Standard Name (Do not change!)\n \u2503 \u2503 \u2503 \u2517 \ud83d\udcc2Add To Do\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0# Use Case\n \u2503 \u2503 \u2503 \u2503 \u2517 \ud83d\udcdccontroller.bl          \n \u2503 \u2503 \u2503 \u2517 \ud83d\udcc2 ... \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0# Another Use Case    \n \u2517 \ud83d\udcdcsetup.bl\n\n")),(0,n.kt)("h3",{id:"setupbl-file"},"setup.bl file"),(0,n.kt)("p",null,"Setup file must be located in the root directory of the input folder.  "),(0,n.kt)("h4",{id:"format"},"Format"),(0,n.kt)("h5",{id:"language-configuration-optional"},"Language configuration (optional)"),(0,n.kt)("p",null,"Configure which language the bl will be transpiled to.\nFow now, only Typescript is supported and it is selected by default.",(0,n.kt)("br",{parentName:"p"}),"\n","More languages to follow."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"Config.setLanguage(TypeScript);\n")),(0,n.kt)("h5",{id:"router-definition-rest"},"Router definition (REST)"),(0,n.kt)("p",null,"Declare your router and assign to it a router expression as the example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"const toDoRESTRouter = RESTRouter(REST.Fastify) {\n  Get('/add'): [To Do App][To Do]AddToDoRESTController();\n// <Method>(<Path>): [<Bounded Context>][<Module>]<Controller>();\n};\n")),(0,n.kt)("p",null,"In accordance with Domain-Driven-Development principles, due to the ubiquitous language, ",(0,n.kt)("strong",{parentName:"p"},"use cases")," and ",(0,n.kt)("strong",{parentName:"p"},"controllers")," must have ",(0,n.kt)("strong",{parentName:"p"},"unique names"),"."),(0,n.kt)("h5",{id:"server-expression-rest"},"Server expression (REST)"),(0,n.kt)("p",null,"Instantiate your server and bind routes as the example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"RESTServer({\n  server: REST.Fastify,\n  port: env.FASTIFY_PORT || 5001,\n  apiPrefix: '/api',\n}) {\n  '/todo': toDoRESTRouter;\n};\n")),(0,n.kt)("h3",{id:"controllerbl-file"},"controller.bl file"),(0,n.kt)("p",null,"Controller file must be located in the directory of the Use Case it coordinates."),(0,n.kt)("h4",{id:"format-1"},"Format"),(0,n.kt)("h5",{id:"controller-expression-rest"},"Controller expression (REST)"),(0,n.kt)("p",null,"Declare and instantiate your controller as the example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"RESTController HelloWorldController () {\n  method: REST.Methods.GET;\n  execute(request, response) {\n    this.ok(response, 'To Do added!');\n  }\n};\n")))}c.isMDXComponent=!0}}]);