"use strict";(self.webpackChunkbitloops_com_docs=self.webpackChunkbitloops_com_docs||[]).push([[3657],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>u});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),d=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=d(r),u=n,f=m["".concat(s,".").concat(u)]||m[u]||p[u]||o;return r?a.createElement(f,i(i({ref:t},c),{},{components:r})):a.createElement(f,i({ref:t},c))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var d=2;d<o;d++)i[d]=r[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8604:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_label:"ReadModel",title:"ReadModel - Basic Syntax",description:"ReadModel syntax on Bitloops Language - Read Model is simply a model that is built specifically for queries and reading the data. This improves performance and reduces communication costs.",keywords:["bitloops","bitloops language","basic syntax","programming language","variables","types","objects","data types","classes","interfaces","modules","functions","loops","services"]},i="ReadModel",l={unversionedId:"reference/read-model",id:"reference/read-model",title:"ReadModel - Basic Syntax",description:"ReadModel syntax on Bitloops Language - Read Model is simply a model that is built specifically for queries and reading the data. This improves performance and reduces communication costs.",source:"@site/docs/reference/read-model.md",sourceDirName:"reference",slug:"/reference/read-model",permalink:"/docs/bitloops-language/reference/read-model",draft:!1,editUrl:"https://github.com/bitloops/bitloops-language/edit/main/documentation/docs/reference/read-model.md",tags:[],version:"current",frontMatter:{sidebar_label:"ReadModel",title:"ReadModel - Basic Syntax",description:"ReadModel syntax on Bitloops Language - Read Model is simply a model that is built specifically for queries and reading the data. This improves performance and reduces communication costs.",keywords:["bitloops","bitloops language","basic syntax","programming language","variables","types","objects","data types","classes","interfaces","modules","functions","loops","services"]},sidebar:"tutorialSidebar",previous:{title:"Props",permalink:"/docs/bitloops-language/reference/props"},next:{title:"RepoAdapter",permalink:"/docs/bitloops-language/reference/repository-adapter"}},s={},d=[{value:"Definition",id:"definition",level:3},{value:"Examples",id:"examples",level:3},{value:"Declaring a ReadModel",id:"declaring-a-readmodel",level:5},{value:"Syntax",id:"syntax",level:3},{value:"Declaring a ReadModel",id:"declaring-a-readmodel-1",level:5},{value:"Further reading",id:"further-reading",level:3}],c={toc:d};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"readmodel"},"ReadModel"),(0,n.kt)("h3",{id:"definition"},"Definition"),(0,n.kt)("p",null,"A ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Read Model"))," is a model specialized for reads, that is, queries. Queries are performed to obtain the data needed by the client applications, so the returned type can be specifically made for the clients and it can simply be a JSON object. So a ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Read Model"))," is a data structure for displaying information that is in some way based on a Write Model."),(0,n.kt)("h3",{id:"examples"},"Examples"),(0,n.kt)("h5",{id:"declaring-a-readmodel"},"Declaring a ReadModel"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"  ReadModel TodoReadModel {\n    string id;\n    string title;\n    bool completed;\n  }\n")),(0,n.kt)("h3",{id:"syntax"},"Syntax"),(0,n.kt)("h5",{id:"declaring-a-readmodel-1"},"Declaring a ReadModel"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"    ReadModel <identifier name with a ReadModel suffix> {\n        <parameters list separated with semicolon>\n    }\n")),(0,n.kt)("h3",{id:"further-reading"},"Further reading"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/dotnet/architecture/microservices/microservice-ddd-cqrs-patterns/cqrs-microservice-reads"},"Implement reads in a microservice")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://dev.to/alexlawrence/read-model-on-the-write-side-107d"},"Read Model on the write side"))))}p.isMDXComponent=!0}}]);