"use strict";(self.webpackChunkbitloops_com_docs=self.webpackChunkbitloops_com_docs||[]).push([[5537],{3905:(e,r,n)=>{n.d(r,{Zo:()=>c,kt:()=>y});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=t.createContext({}),p=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},c=function(e){var r=p(e.components);return t.createElement(l.Provider,{value:r},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=a,y=m["".concat(l,".").concat(u)]||m[u]||d[u]||o;return n?t.createElement(y,i(i({ref:r},c),{},{components:n})):t.createElement(y,i({ref:r},c))}));function y(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5726:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var t=n(7462),a=(n(7294),n(3905));const o={sidebar_label:"DomainError",title:"DomainError - Basic Syntax",description:"DomainError syntax on Bitloops Language - Domain Erros occur when there is an error in the domain layer of your application and its important to have a predefined template to better manage these errors when they occur.",keywords:["bitloops","bitloops language","basic syntax","programming language","variables","types","objects","data types","classes","interfaces","modules","functions","loops","services"]},i="DomainError",s={unversionedId:"reference/domain-error",id:"reference/domain-error",title:"DomainError - Basic Syntax",description:"DomainError syntax on Bitloops Language - Domain Erros occur when there is an error in the domain layer of your application and its important to have a predefined template to better manage these errors when they occur.",source:"@site/docs/reference/domain-error.md",sourceDirName:"reference",slug:"/reference/domain-error",permalink:"/docs/bitloops-language/reference/domain-error",draft:!1,editUrl:"https://github.com/bitloops/bitloops-language/edit/main/documentation/docs/reference/domain-error.md",tags:[],version:"current",frontMatter:{sidebar_label:"DomainError",title:"DomainError - Basic Syntax",description:"DomainError syntax on Bitloops Language - Domain Erros occur when there is an error in the domain layer of your application and its important to have a predefined template to better manage these errors when they occur.",keywords:["bitloops","bitloops language","basic syntax","programming language","variables","types","objects","data types","classes","interfaces","modules","functions","loops","services"]},sidebar:"tutorialSidebar",previous:{title:"ApplicationError",permalink:"/docs/bitloops-language/reference/application-error"},next:{title:"DomainEvent",permalink:"/docs/bitloops-language/reference/domain-event"}},l={},p=[{value:"Overview",id:"overview",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Usage Example",id:"usage-example",level:2}],c={toc:p},m="wrapper";function d(e){let{components:r,...n}=e;return(0,a.kt)(m,(0,t.Z)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"domainerror"},"DomainError"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"The domain error component helps you better organize the errors associated with the domain of your application\nby providing an understandable and easily modified template. This way your errors are well documented\nand identifiable by both the developers and users of your application."),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"}," DomainError InvalidName(name: string) {\n   message: `${name} is an invalid name`,\n   errorId: 'e5a0bd82-8ef7-4b1a-ab67-cb83d1d7772fe',\n }\n")),(0,a.kt)("p",null,"As you might have observed the command mainly consists of 2 fields the ",(0,a.kt)("inlineCode",{parentName:"p"},"message")," and the\n",(0,a.kt)("inlineCode",{parentName:"p"},"errorId"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"errorId")," is the unique identifier of your domain errors and it\nhelps you better identify them in your application."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"message")," property is were you get specific on what your error actually mean. This\npart will most likely be the one that is displayed to the people interacting\nwith your application and it is where good definition actually plays a big role.\nLuckily the bitloops language utilizes typeScript's\n",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"},"template string"),"\nmechanism that enables the injection of variables in your message string.\nYou can use the arguments that are passed in your object to dynamically\ndefine your errors based on circumstances."),(0,a.kt)("p",null,"As you can observe in the example above we can utilize this mechanic and be\nmore specific about the name that caused the error."),(0,a.kt)("h2",{id:"usage-example"},"Usage Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"ValueObject Name {\n  const regName = /^[a-zA-Z ]{2,30}$/;\n\n  isInvalidName(name: string): bool {\n    return !regName.test(name);\n  }\n\n  create(props: NameProps): (OK(Name), Error(DomainErrors.InvalidName)) {\n    if (isInvalidName(props.name)) {\n      return new DomainErrors.InvalidName(props.name);\n    } else {\n      return new Name(props);\n    }\n  }\n}\n\nDomainError InvalidName(name: string) {\n  message: `${name} is an invalid name`,\n  errorId: 'e5a0bd82-8ef7-4b1a-ab67-cb83d1d7772fe',\n}\n")),(0,a.kt)("p",null,"As you can see in the example above the validity of the name is something that\nis related with your domain and it is therefore a meaningful error. It is therefore\ndefined inside the Name entity and it is returned at the appropriate case of the\ncreate method."))}d.isMDXComponent=!0}}]);