"use strict";(self.webpackChunkbitloops_com_docs=self.webpackChunkbitloops_com_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Introduction","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Welcome!","href":"/docs/bitloops-language/introduction/welcome","docId":"introduction/welcome"},{"type":"link","label":"Bitloops @ a Glance!","href":"/docs/bitloops-language/introduction/Bitloops_at_a_glance","docId":"introduction/Bitloops_at_a_glance"},{"type":"link","label":"The Bitloops (Big Idea) Vision!","href":"/docs/bitloops-language/introduction/bigidea","docId":"introduction/bigidea"}],"href":"/docs/bitloops-language/category/introduction"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installation","href":"/docs/bitloops-language/getting-started/installation","docId":"getting-started/installation"},{"type":"link","label":"Quick Start","href":"/docs/bitloops-language/getting-started/quick-start","docId":"getting-started/quick-start"},{"type":"link","label":"Code Snippet Examples","href":"/docs/bitloops-language/getting-started/code-examples","docId":"getting-started/code-examples"}],"href":"/docs/bitloops-language/category/getting-started"},{"type":"category","label":"Language Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ApplicationError","href":"/docs/bitloops-language/reference/application-error","docId":"reference/application-error"},{"type":"link","label":"DomainError","href":"/docs/bitloops-language/reference/domain-error","docId":"reference/domain-error"},{"type":"link","label":"DomainEvent","href":"/docs/bitloops-language/reference/domain-event","docId":"reference/domain-event"},{"type":"link","label":"DTO","href":"/docs/bitloops-language/reference/dto","docId":"reference/dto"},{"type":"link","label":"Entity","href":"/docs/bitloops-language/reference/entity","docId":"reference/entity"},{"type":"link","label":"EventHandler","href":"/docs/bitloops-language/reference/event-handler","docId":"reference/event-handler"},{"type":"link","label":"Features","href":"/docs/bitloops-language/reference/features","docId":"reference/features"},{"type":"link","label":"GraphQLController","href":"/docs/bitloops-language/reference/graphql-controller","docId":"reference/graphql-controller"},{"type":"link","label":"IntegrationEvent","href":"/docs/bitloops-language/reference/integration-event","docId":"reference/integration-event"},{"type":"link","label":"Mapper","href":"/docs/bitloops-language/reference/mapper","docId":"reference/mapper"},{"type":"link","label":"PackageAdapter","href":"/docs/bitloops-language/reference/package-adapter","docId":"reference/package-adapter"},{"type":"link","label":"PackagePort","href":"/docs/bitloops-language/reference/package-port","docId":"reference/package-port"},{"type":"link","label":"Props","href":"/docs/bitloops-language/reference/props","docId":"reference/props"},{"type":"link","label":"ReadModel","href":"/docs/bitloops-language/reference/read-model","docId":"reference/read-model"},{"type":"link","label":"RepoAdapter","href":"/docs/bitloops-language/reference/repository-adapter","docId":"reference/repository-adapter"},{"type":"link","label":"RepoPort","href":"/docs/bitloops-language/reference/repository-port","docId":"reference/repository-port"},{"type":"link","label":"RESTController","href":"/docs/bitloops-language/reference/rest-controller","docId":"reference/rest-controller"},{"type":"link","label":"Rule","href":"/docs/bitloops-language/reference/rule","docId":"reference/rule"},{"type":"link","label":"ServiceAdapter","href":"/docs/bitloops-language/reference/service-adapter","docId":"reference/service-adapter"},{"type":"link","label":"ServicePort","href":"/docs/bitloops-language/reference/service-port","docId":"reference/service-port"},{"type":"link","label":"Setup","href":"/docs/bitloops-language/reference/setup","docId":"reference/setup"},{"type":"link","label":"Step","href":"/docs/bitloops-language/reference/step-definitions","docId":"reference/step-definitions"},{"type":"link","label":"Struct","href":"/docs/bitloops-language/reference/struct","docId":"reference/struct"},{"type":"link","label":"UseCase","href":"/docs/bitloops-language/reference/usecase","docId":"reference/usecase"},{"type":"link","label":"ValueObject","href":"/docs/bitloops-language/reference/value-object","docId":"reference/value-object"}],"href":"/docs/bitloops-language/category/language-reference"},{"type":"category","label":"How-to Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Define a DTO","href":"/docs/bitloops-language/how-to-guides/define-a-dto","docId":"how-to-guides/define-a-dto"},{"type":"link","label":"Define a Value Object","href":"/docs/bitloops-language/how-to-guides/define-a-value-object","docId":"how-to-guides/define-a-value-object"},{"type":"link","label":"Define an Entity","href":"/docs/bitloops-language/how-to-guides/define-an-entity","docId":"how-to-guides/define-an-entity"}],"href":"/docs/bitloops-language/category/how-to-guides"},{"type":"category","label":"Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create a ToDo App","href":"/docs/bitloops-language/tutorials/building-todo-app","docId":"tutorials/building-todo-app"}],"href":"/docs/bitloops-language/category/tutorials"},{"type":"link","label":"FAQs","href":"/docs/bitloops-language/faqs","docId":"faqs"},{"type":"link","label":"Getting Help","href":"/docs/bitloops-language/getting-help","docId":"getting-help"},{"type":"category","label":"Learning","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Software Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Layered Architecture","href":"/docs/bitloops-language/learning/software-architecture/layered-architecture","docId":"learning/software-architecture/layered-architecture"},{"type":"link","label":"Hexagonal Architecture","href":"/docs/bitloops-language/learning/software-architecture/hexagonal-architecture","docId":"learning/software-architecture/hexagonal-architecture"},{"type":"link","label":"Onion Architecture","href":"/docs/bitloops-language/learning/software-architecture/onion-architecture","docId":"learning/software-architecture/onion-architecture"},{"type":"link","label":"Event-Driven Architecture","href":"/docs/bitloops-language/learning/software-architecture/event-driven-architecture","docId":"learning/software-architecture/event-driven-architecture"},{"type":"link","label":"Microservices","href":"/docs/bitloops-language/learning/software-architecture/microservices","docId":"learning/software-architecture/microservices"}],"href":"/docs/bitloops-language/category/software-architecture"},{"type":"category","label":"Software Design","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Domain Driven Design","href":"/docs/bitloops-language/learning/software-design/domain-driven-design","docId":"learning/software-design/domain-driven-design"},{"type":"link","label":"Behavior Driven Development","href":"/docs/bitloops-language/learning/software-design/behavior-driven-development","docId":"learning/software-design/behavior-driven-development"},{"type":"link","label":"Test Driven Development","href":"/docs/bitloops-language/learning/software-design/test-driven-development","docId":"learning/software-design/test-driven-development"},{"type":"link","label":"CQRS","href":"/docs/bitloops-language/learning/software-design/cqrs","docId":"learning/software-design/cqrs"},{"type":"link","label":"Event Sourcing","href":"/docs/bitloops-language/learning/software-design/event-sourcing","docId":"learning/software-design/event-sourcing"}],"href":"/docs/bitloops-language/category/software-design"},{"type":"link","label":"Other learning resources","href":"/docs/bitloops-language/learning/software-design-books","docId":"learning/software-design-books"}],"href":"/docs/bitloops-language/category/learning"},{"type":"link","label":"Sign Up","href":"/docs/bitloops-language/sign-up","docId":"sign-up"}]},"docs":{"faqs":{"id":"faqs","title":"FAQs - Frequently Asked Questions","description":"List of questions that are frequently asked by Bitloops users. Answers about the Bitloops Platform, Bitloops Language, User Accounts and software develompent in general","sidebar":"tutorialSidebar"},"getting-help":{"id":"getting-help","title":"Bitloops - How to get Help?","description":"Need help with Bitloops? We have several channels you can access to get some help with the Bitloops Platform, Bitloops Language or any other topic regarding your software development project","sidebar":"tutorialSidebar"},"getting-started/code-examples":{"id":"getting-started/code-examples","title":"Bitloops Language - Code Snippet Examples","description":"List of examples of code snippets that explain how the Bitloops Language works, and how it can be used across other applications.","sidebar":"tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Bitloops Language Installation - How to Install Bitloops","description":"This article explains in depth how to install the open source Bitloops Language and begin using it to build high-quality, robust, flexible and maintainable systems.","sidebar":"tutorialSidebar"},"getting-started/quick-start":{"id":"getting-started/quick-start","title":"Bitloops Quick Start - Learn Bitloops Language quickly","description":"This article explains how to get started with Bitloops very quickly. It provides a demonstration of how to get it up and running, how it works and how to begin exploring its features and capabilities.","sidebar":"tutorialSidebar"},"how-to-guides/define-a-dto":{"id":"how-to-guides/define-a-dto","title":"DTO - How to define one with Bitloops?","description":"A Data Transfer Object (DTO) is an object that carries data between processes. Learn how to define a DTO with Bitloops Language to improve encapsulation of your application.","sidebar":"tutorialSidebar"},"how-to-guides/define-a-value-object":{"id":"how-to-guides/define-a-value-object","title":"Value Object - How to define one with Bitloops?","description":"A Value Object is a variable in Bitloops Language without identify. Learn how to define a Value Object using BL to increase cohesion of your application.","sidebar":"tutorialSidebar"},"how-to-guides/define-an-entity":{"id":"how-to-guides/define-an-entity","title":"Entity - How to define one with Bitloops?","description":"An Entity is a variable in Bitloops Language with its own identify. Learn how to define an Entity using BL to increase cohesion of your application.","sidebar":"tutorialSidebar"},"introduction/bigidea":{"id":"introduction/bigidea","title":"Bitloops Vision - Software Engineering Superpowers","description":"Bitloops has a vision to radically improve how backend applications are designed, built and managed. We believe software development can be significantly more efficient with the right software architecture and design patterns!","sidebar":"tutorialSidebar"},"introduction/Bitloops_at_a_glance":{"id":"introduction/Bitloops_at_a_glance","title":"What is Bitloops? A modern development platform","description":"Want to learn more about Bitloops? This article provides a concise description of what Bitloops is, our vision and how it can help you build better software, faster!","sidebar":"tutorialSidebar"},"introduction/welcome":{"id":"introduction/welcome","title":"Bitloops gives you Software Engineering Superpowers!","description":"Introduction to Bitloops, how it works and how it can help you build better software. Bitloops incorporates industry best-practices and design principles into your software development process.","sidebar":"tutorialSidebar"},"learning/software-architecture/event-driven-architecture":{"id":"learning/software-architecture/event-driven-architecture","title":"Event-Driven Architecture: Building Scalable & Responsive Software Systems","description":"Learn how to create software systems that are scalable, responsive, and reliable by leveraging asynchronous communication and event-driven architecture. Whether you\'re a developer, architect, or project manager, this page will equip you with the knowledge and tools you need to design software that can handle complex business requirements and deliver real-time data processing.","sidebar":"tutorialSidebar"},"learning/software-architecture/hexagonal-architecture":{"id":"learning/software-architecture/hexagonal-architecture","title":"Hexagonal Architecture: Building Modular & Testable Software Systems","description":"Learn how to create software systems that are modular, testable, and easy to maintain, by separating the application core from the external interfaces. Whether you\'re a developer, architect, or project manager, this comprehensive review will equip you with the knowledge and insights you need to design software that meets your business requirements and exceeds your users\' expectations.","sidebar":"tutorialSidebar"},"learning/software-architecture/layered-architecture":{"id":"learning/software-architecture/layered-architecture","title":"Layered Architecture: Building Scalable & Maintainable Software Systems","description":"Unlock the power of Layered Architecture with this comprehensive review. Learn how to design software systems with clear separation of concerns and modular components, making them easier to understand, maintain and scale. Whether you\'re a developer, architect, or project manager, this article will equip you with the knowledge and insights you need to create layered software architectures that meet your business needs and deliver an excellent user experience.","sidebar":"tutorialSidebar"},"learning/software-architecture/microservices":{"id":"learning/software-architecture/microservices","title":"Microservices Reference Guide: Everything You Need to Know About Microservices Architecture","description":"Discover the benefits of microservices architecture for your software development needs. Our expert team can help you design and implement a decentralized, scalable, and technology-agnostic solution.","sidebar":"tutorialSidebar"},"learning/software-architecture/onion-architecture":{"id":"learning/software-architecture/onion-architecture","title":"Onion Architecture: Benefits of Layered and Modular Software Architecture","description":"Learn how to create software systems that are modular, testable, and easy to maintain, by separating the application core from the external dependencies using the onion architecture design pattern.","sidebar":"tutorialSidebar"},"learning/software-design-books":{"id":"learning/software-design-books","title":"Best Resources to learn about Software Development","description":"Comprehensive list of resources every Software Engineer should consume to become a better software engineer. Books, articles, videos and blogs that will transform your understanding of software","sidebar":"tutorialSidebar"},"learning/software-design/behavior-driven-development":{"id":"learning/software-design/behavior-driven-development","title":"Behavior Driven Development - What is it and how to apply it?","description":"Behavior driven development is a software development process that encourages development teams to form a shared understanding of how an application should behave, and use that to build the software.","sidebar":"tutorialSidebar"},"learning/software-design/cqrs":{"id":"learning/software-design/cqrs","title":"CQRS Pattern - What is it?","description":"Discover the benefits of Command Query Responsibility Segregation (CQRS) for building scalable, event-driven software systems. Explore the core principles, implementation challenges, and best practices for CQRS, and learn how it can revolutionize your data management and processing workflows.","sidebar":"tutorialSidebar"},"learning/software-design/domain-driven-design":{"id":"learning/software-design/domain-driven-design","title":"Domain Driven Design - What is it and how to apply it?","description":"Learn how to build software systems that align with your business needs and understand the key concepts of Domain-Driven Design (DDD), including bounded contexts, aggregates, and ubiquitous language. Whether you\'re a developer, architect, or project manager, this comprehensive DDD review will equip you with the knowledge and insights you need to design more effective software systems.","sidebar":"tutorialSidebar"},"learning/software-design/event-sourcing":{"id":"learning/software-design/event-sourcing","title":"Event Sourcing - What is it?","description":"Learn how to effectively manage data in your software systems with event sourcing. This comprehensive reference guide covers everything you need to know about implementing event sourcing, including its benefits, challenges, and complementary tools like DDD, Hexagonal architecture, and CQRS. Build more scalable and reliable applications that can transform the way you manage data with event sourcing.","sidebar":"tutorialSidebar"},"learning/software-design/test-driven-development":{"id":"learning/software-design/test-driven-development","title":"Test Driven Development - What is Test Driven Development (TDD)?","description":"Test-driven development (TDD) is a software development process the encourages developers to build test cases that represent the exepcted outcomes before the development of the actual code.","sidebar":"tutorialSidebar"},"reference/application-error":{"id":"reference/application-error","title":"ApplicationError - Basic Syntax","description":"ApplicationError syntax on Bitloops Language - Application Erros occur when there is an error in the application layer where interaction with external parts is initiated","sidebar":"tutorialSidebar"},"reference/domain-error":{"id":"reference/domain-error","title":"DomainError - Basic Syntax","description":"DomainError syntax on Bitloops Language - Domain Erros occur when there is an error in the domain layer of your application and its important to have a predefined template to better manage these errors when they occur.","sidebar":"tutorialSidebar"},"reference/domain-event":{"id":"reference/domain-event","title":"DomainEvent - Basic Syntax","description":"DomainEvent syntax on Bitloops Language - Domain Events are events that occur within a specific domain.","sidebar":"tutorialSidebar"},"reference/dto":{"id":"reference/dto","title":"Data Transfer Object (DTO) - Basic Syntax","description":"DTO syntax on Bitloops Language - DTOs are data transfer objects, meaning their sole responsibility is to transfer objects from one service to another, and correct configuration of these DTOs reduces communication costs considerably.","sidebar":"tutorialSidebar"},"reference/entity":{"id":"reference/entity","title":"Entity - Basic Syntax","description":"Entity syntax on Bitloops Language - An entity is a representation of an object that has an identity. It is unique!","sidebar":"tutorialSidebar"},"reference/event-handler":{"id":"reference/event-handler","title":"Event Handler - Basic Syntax","description":"EventHandler syntax on Bitloops Language - Event Handlers dictate the action that follows a specific event.","sidebar":"tutorialSidebar"},"reference/features":{"id":"reference/features","title":"Features - Basic Syntax","description":"Features syntax on Bitloops Language - Features are broad groupings of application services that solve a particular use case or behavior.","sidebar":"tutorialSidebar"},"reference/graphql-controller":{"id":"reference/graphql-controller","title":"GraphQLController - Basic Syntax","description":"GraphQLController syntax on Bitloops Language - GraphQLController is a controller specifically for GraphQL which Bitloops has defined up-front.","sidebar":"tutorialSidebar"},"reference/integration-event":{"id":"reference/integration-event","title":"Integration Event - Basic Syntax","description":"IntegrationEvent syntax on Bitloops Language - Integration events are used for integrating with other service boundaries. This is to distinguish between Events which occur within a bounded context.","sidebar":"tutorialSidebar"},"reference/mapper":{"id":"reference/mapper","title":"Mapper - Basic Syntax","description":"Mapper syntax on Bitloops Language - Mapper...","sidebar":"tutorialSidebar"},"reference/package-adapter":{"id":"reference/package-adapter","title":"Package Adapter - Basic Syntax","description":"PackageAdapter syntax on Bitloops Language - Package Adapter is the concrete implementation of the Package Port to enable the use of external libraries.","sidebar":"tutorialSidebar"},"reference/package-port":{"id":"reference/package-port","title":"Package Port - Basic Syntax","description":"PackagePort syntax on Bitloops Language - Package Port allows developers to quickly use external libraries by acting as an interface between the Bitloops application and that external library.","sidebar":"tutorialSidebar"},"reference/props":{"id":"reference/props","title":"Props - Basic Syntax","description":"Props syntax on Bitloops Language - Propos are used together with DTOs to transfer objects","sidebar":"tutorialSidebar"},"reference/read-model":{"id":"reference/read-model","title":"ReadModel - Basic Syntax","description":"ReadModel syntax on Bitloops Language - Read Model is simply a model that is built specifically for queries and reading the data. This improves performance and reduces communication costs.","sidebar":"tutorialSidebar"},"reference/repository-adapter":{"id":"reference/repository-adapter","title":"Repository Adapter - Basic Syntax","description":"RepoAdapter syntax on Bitloops Language - Repository Adapters allow developers to declare the actual concretion of the repository port that allows the system to connect to different databases easily.","sidebar":"tutorialSidebar"},"reference/repository-port":{"id":"reference/repository-port","title":"Repository Port - Basic Syntax","description":"RepoPort syntax on Bitloops Language - Repository Ports allows developers to declare an interface to connect different databases easily using a Repository Adapter.","sidebar":"tutorialSidebar"},"reference/rest-controller":{"id":"reference/rest-controller","title":"RESTController - Basic Syntax","description":"RESTController syntax on Bitloops Language - RESTController is used to make restful web services and handle requests made by clients. More specifically, it can handle REST APIs such as GET, POST, DELETE, PUT and PATCH.","sidebar":"tutorialSidebar"},"reference/rule":{"id":"reference/rule","title":"Rule - Basic Syntax","description":"Rule syntax on Bitloops Language - Rule ...","sidebar":"tutorialSidebar"},"reference/service-adapter":{"id":"reference/service-adapter","title":"Service Adapter - Basic Syntax","description":"ServiceAdapter syntax on Bitloops Language - Service Adapter...","sidebar":"tutorialSidebar"},"reference/service-port":{"id":"reference/service-port","title":"Service Port - Basic Syntax","description":"ServicePort syntax on Bitloops Language - Service Ports are the doors to your application and should therefore be configured correctly for security, speed and efficiency.","sidebar":"tutorialSidebar"},"reference/setup":{"id":"reference/setup","title":"Setup - Basic Syntax","description":"Setup syntax on Bitloops Language - Setup is required to provide the server with the required information for initialization. This could be with GraphQL, Packages, RestControllers or Use Case.","sidebar":"tutorialSidebar"},"reference/step-definitions":{"id":"reference/step-definitions","title":"Step - Basic Syntax","description":"Step syntax on Bitloops Language - Steps....","sidebar":"tutorialSidebar"},"reference/struct":{"id":"reference/struct","title":"Struct - Basic Syntax","description":"Struct syntax on Bitloops Language - Structs are used to store items in key/value pairs to then be accessed with the use of an index. Structs are similar to objects in Javascript.","sidebar":"tutorialSidebar"},"reference/usecase":{"id":"reference/usecase","title":"Use Case - Basic Syntax","description":"UseCase syntax on Bitloops Language - Use Cases define the main features of an application and coordinate the execution of tasks by entities, domain services and any other code in the system.","sidebar":"tutorialSidebar"},"reference/value-object":{"id":"reference/value-object","title":"Value Object - Basic Syntax","description":"ValueObject syntax on Bitloops Language - Value objects are objects that do not have an identidy. There are objects that represent a characteristic and do not identify an variable or object.","sidebar":"tutorialSidebar"},"sign-up":{"id":"sign-up","title":"SIGN UP","description":"Facebook blue are my favorite colors.","sidebar":"tutorialSidebar"},"tutorials/building-todo-app":{"id":"tutorials/building-todo-app","title":"Bitloops Tutorial - Create a ToDo App using Bitloops","description":"Learn how to build a ToDo app quickly and efficiently using Bitloops. You\'ll learn how to apply industry best practices and software design principles that lead to high-quality software","sidebar":"tutorialSidebar"}}}')}}]);