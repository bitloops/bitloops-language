"use strict";(self.webpackChunkbitloops_com_docs=self.webpackChunkbitloops_com_docs||[]).push([[8715],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>y});var o=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=o.createContext({}),s=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},c=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(r),y=a,m=u["".concat(l,".").concat(y)]||u[y]||d[y]||n;return r?o.createElement(m,p(p({ref:t},c),{},{components:r})):o.createElement(m,p({ref:t},c))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,p=new Array(n);p[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var s=2;s<n;s++)p[s]=r[s];return o.createElement.apply(null,p)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6749:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>d,frontMatter:()=>n,metadata:()=>i,toc:()=>s});var o=r(7462),a=(r(7294),r(3905));const n={sidebar_label:"RepoAdapter",title:"Repository Adapter - Basic Syntax",description:"RepoAdapter syntax on Bitloops Language - Repository Adapters allow developers to declare the actual concretion of the repository port that allows the system to connect to different databases easily.",keywords:["bitloops","bitloops language","basic syntax","programming language","variables","types","objects","data types","classes","interfaces","modules","functions","loops","services","repoadapter","repository adapter"]},p="RepoAdapter",i={unversionedId:"reference/repository-adapter",id:"reference/repository-adapter",title:"Repository Adapter - Basic Syntax",description:"RepoAdapter syntax on Bitloops Language - Repository Adapters allow developers to declare the actual concretion of the repository port that allows the system to connect to different databases easily.",source:"@site/docs/reference/repository-adapter.md",sourceDirName:"reference",slug:"/reference/repository-adapter",permalink:"/docs/bitloops-language/reference/repository-adapter",draft:!1,editUrl:"https://github.com/bitloops/bitloops-language/edit/main/documentation/docs/reference/repository-adapter.md",tags:[],version:"current",frontMatter:{sidebar_label:"RepoAdapter",title:"Repository Adapter - Basic Syntax",description:"RepoAdapter syntax on Bitloops Language - Repository Adapters allow developers to declare the actual concretion of the repository port that allows the system to connect to different databases easily.",keywords:["bitloops","bitloops language","basic syntax","programming language","variables","types","objects","data types","classes","interfaces","modules","functions","loops","services","repoadapter","repository adapter"]},sidebar:"tutorialSidebar",previous:{title:"ReadModel",permalink:"/docs/bitloops-language/reference/read-model"},next:{title:"RepoPort",permalink:"/docs/bitloops-language/reference/repository-port"}},l={},s=[{value:"Syntax",id:"syntax",level:3},{value:"CRUDRepoAdapter",id:"crudrepoadapter",level:2},{value:"Syntax",id:"syntax-1",level:3},{value:"Example",id:"example",level:3}],c={toc:s};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"repoadapter"},"RepoAdapter"),(0,a.kt)("p",null,"The RepoAdapter component is a tool which helps to declare the actual concretion of the ",(0,a.kt)("strong",{parentName:"p"},"RepoPort"),",\nin order to plug in different databases easily. Its name and functionality is inspired by the Repository Pattern.\nMore information not available yet!"),(0,a.kt)("h3",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Not available yet!\n")),(0,a.kt)("h2",{id:"crudrepoadapter"},"CRUDRepoAdapter"),(0,a.kt)("p",null,"The CRUDRepoAdapter is a RepoAdapter which utilizes the ",(0,a.kt)("strong",{parentName:"p"},"CRUDRepoPort"),"."),(0,a.kt)("h3",{id:"syntax-1"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"}," RepoAdapters.Mongo concretes [Demo][Hello World]MyHelloRepoPort;\n")),(0,a.kt)("p",null,"In order to utilize the RepoAdapter the declaration above is needed:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"RepoAdapters.Mongo"),": Here the actual database of the concretion is declared from the available system databases."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"concretes"),": A reserved word to attach a spesific port to the ",(0,a.kt)("strong",{parentName:"p"},"RepoAdapter"),"."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"[Demo][Hello World]MyHelloRepoPort"),": Here the specific ",(0,a.kt)("strong",{parentName:"p"},"RepoPort")," is declared in order to attach it to the specific concretion. ",(0,a.kt)("inlineCode",{parentName:"p"},"[Demo]")," represents the bounded context where the specific port is declared. ",(0,a.kt)("inlineCode",{parentName:"p"},"[Hello World]")," is the specific module where is the specific ",(0,a.kt)("strong",{parentName:"p"},"RepoPort")," declaration is located, followed by the ",(0,a.kt)("inlineCode",{parentName:"p"},"MyHelloRepoPort")," which is the exact name of the ",(0,a.kt)("strong",{parentName:"p"},"RepoPort"),"which have been declared."),(0,a.kt)("p",null,"After the declaration the system creates actual implementation of the adapter using mongoDB, under the hood."),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("p",null,"For example in order to create a concretion with mongoDB for the example dicussed at the RepoPort (for the ",(0,a.kt)("strong",{parentName:"p"},"CRUDRepoPort"),"), the concretion declaration would be something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"}," RepoAdapters.Mongo concretes [Sales][CarSelling]CarRepoPort;\n")))}d.isMDXComponent=!0}}]);