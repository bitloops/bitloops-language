Feature CreateTodo('CreateTodo.feature') {
  Setup {
    Config.setLanguage(TypeScript);
    RepoPort TodoWriteRepoPort<TodoEntity> extends CRUDWriteRepoPort;
    const todoRepo = RepoAdapters.MockRepo concretes [Todo][Todo]TodoWriteRepoPort;
    const useCase = CreateTodoUseCase(todoRepo);
  }
  Props TestProps {
    string title;
  }

  Test('Valid Todo Created', props: TestProps) {
    let result;

    When(`I create a todo with ${props.title}`) {
      const requestDTO = AutoDTO(useCase, { title: props.title });
      result = this.useCase.execute(requestDTO);
    }

    Then('I should get an OK result') {
      expect(result).toBeInstanceOf(OK);
    }
  }

  Test('Invalid todo title during creation') {
    let result;

    when(`I create a todo with ${props.title}`) {
      const requestDTO = AutoDTO(useCase, { title: props.title });
      result = this.useCase.execute(requestDTO);
    }

    then('I should get a DomainErrors.TitleOutOfBounds error') {
      expect(result).toBeInstanceOf(DomainErrors.TitleOutOfBoundsError);
    }
  }
}
