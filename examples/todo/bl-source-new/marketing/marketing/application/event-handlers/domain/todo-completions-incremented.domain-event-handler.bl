DomainEventHandler TodoCompletionsIncrementedDomainEventHandler(emailRepoPort: UserEmailReadRepoPort, notificationTemplateRepo: NotificationTemplateReadRepoPort) {

    // TODO change to (OK(void),Errors())
    handle(event: TodoCompletionsIncrementedDomainEvent) {
      const user = event.data;

      const marketingNotificationService = MarketingNotificationDomainService.create(this.notificationTemplateRepo);

      const emailToBeSentInfo = marketingNotificationService.getNotificationTemplateToBeSent(user);
      if(emailToBeSentInfo is Error){
        return Error(emailToBeSentInfo);
      }
      
      if (NOT emailToBeSentInfo OR NOT emailToBeSentInfo.notificationTemplate) {
        return;
      }

      const userEmail = this.emailRepoPort.getUserEmail(user.id);
      if(userEmail is Error){
        return Error(userEmail);
      }
      
      if (NOT userEmail) {
        return ApplicationErrors.UserEmailNotFoundError(user.id.toString());
      }

      const command = SendEmailCommand.create({
        origin: emailToBeSentInfo.emailOrigin,
        destination: userEmail.email,
        content: emailToBeSentInfo.notificationTemplate.template,
      });
      this.commandBus.send(command);
    }
}