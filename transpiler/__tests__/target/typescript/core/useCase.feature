# https://docs.google.com/spreadsheets/d/1p3u8LIB873B9c7KvIDR7x-9od653oHC6DM82qR18zsk/edit#gid=0
Feature: UseCase to Typescript target language

  Background:
    Given language is "TypeScript"

    Scenario Template: UseCase with execute
    Given I have a useCase <useCase>
    When I generate the code
    Then I should see the <output> code

   # Examples: # @bitloops-auto-generated
       # | useCase | output | @bitloops-auto-generated |
       # | {"HelloWorldUseCase":{"parameterDependencies":[],"returnTypes":{"ok":"HelloWorldResponseDTO","errors":["HelloWorldErrors.InvalidName"]},"execute":{"parameterDependencies":[{"value":"helloWorldRequestDTO","type":"HelloWorldRequestDTO"}],"statements":[{"constDecomposition":{"names":["name"],"evaluation":{"regularEvaluation":{"type":"variable","value":"helloWorldRequestDTO"}}}}]}},"ExampleUseCase":{"parameterDependencies":[],"returnTypes":{"ok":"ExampleResponseDTO","errors":["ExampleErrors.InvalidName"]},"execute":{"parameterDependencies":[{"value":"exampleRequestDTO","type":"ExampleRequestDTO"}],"statements":[{"constDecomposition":{"names":["name"],"evaluation":{"regularEvaluation":{"type":"variable","value":"exampleRequestDTO"}}}}]}}} | {"HelloWorldUseCase":"type HelloWorldUseCaseResponse = XOR<HelloWorldResponseDTO, HelloWorldErrors.InvalidName>;export class HelloWorldUseCase implements UseCase<HelloWorldRequestDTO, Promise<HelloWorldUseCaseResponse>> {async execute(helloWorldRequestDTO:HelloWorldRequestDTO): Promise<HelloWorldUseCaseResponse> {const { name } = helloWorldRequestDTO;}}","ExampleUseCase":"type ExampleUseCaseResponse = XOR<ExampleResponseDTO, ExampleErrors.InvalidName>;export class ExampleUseCase implements UseCase<ExampleRequestDTO, Promise<ExampleUseCaseResponse>> {async execute(exampleRequestDTO:ExampleRequestDTO): Promise<ExampleUseCaseResponse> {const { name } = exampleRequestDTO;}}"} | @bitloops-auto-generated |
       # | {"HelloWorldUseCase":{"parameterDependencies":[],"returnTypes":{"ok":"HelloWorldResponseDTO","errors":[]},"execute":{"parameterDependencies":[],"statements":[{"returnOK":{"expression":{"evaluation":{"dto":{"fields":[{"name":"message","expression":{"evaluation":{"regularEvaluation":{"type":"string","value":"Hello, World!"}}}}],"name":"HelloWorldResponseDTO"}}}}}]}}} | {"HelloWorldUseCase":"type HelloWorldUseCaseResponse = XOR<HelloWorldResponseDTO, never>;export class HelloWorldUseCase implements UseCase<void, Promise<HelloWorldUseCaseResponse>> {async execute(): Promise<HelloWorldUseCaseResponse> {return yay({message:'Hello, World!'});}}"} | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | useCase | output | @bitloops-auto-generated |
        | 123,34,72,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,34,58,123,34,112,97,114,97,109,101,116,101,114,68,101,112,101,110,100,101,110,99,105,101,115,34,58,91,93,44,34,114,101,116,117,114,110,84,121,112,101,115,34,58,123,34,111,107,34,58,34,72,101,108,108,111,87,111,114,108,100,82,101,115,112,111,110,115,101,68,84,79,34,44,34,101,114,114,111,114,115,34,58,91,34,72,101,108,108,111,87,111,114,108,100,69,114,114,111,114,115,46,73,110,118,97,108,105,100,78,97,109,101,34,93,125,44,34,101,120,101,99,117,116,101,34,58,123,34,112,97,114,97,109,101,116,101,114,68,101,112,101,110,100,101,110,99,105,101,115,34,58,91,123,34,118,97,108,117,101,34,58,34,104,101,108,108,111,87,111,114,108,100,82,101,113,117,101,115,116,68,84,79,34,44,34,116,121,112,101,34,58,34,72,101,108,108,111,87,111,114,108,100,82,101,113,117,101,115,116,68,84,79,34,125,93,44,34,115,116,97,116,101,109,101,110,116,115,34,58,91,123,34,99,111,110,115,116,68,101,99,111,109,112,111,115,105,116,105,111,110,34,58,123,34,110,97,109,101,115,34,58,91,34,110,97,109,101,34,93,44,34,101,118,97,108,117,97,116,105,111,110,34,58,123,34,114,101,103,117,108,97,114,69,118,97,108,117,97,116,105,111,110,34,58,123,34,116,121,112,101,34,58,34,118,97,114,105,97,98,108,101,34,44,34,118,97,108,117,101,34,58,34,104,101,108,108,111,87,111,114,108,100,82,101,113,117,101,115,116,68,84,79,34,125,125,125,125,93,125,125,44,34,69,120,97,109,112,108,101,85,115,101,67,97,115,101,34,58,123,34,112,97,114,97,109,101,116,101,114,68,101,112,101,110,100,101,110,99,105,101,115,34,58,91,93,44,34,114,101,116,117,114,110,84,121,112,101,115,34,58,123,34,111,107,34,58,34,69,120,97,109,112,108,101,82,101,115,112,111,110,115,101,68,84,79,34,44,34,101,114,114,111,114,115,34,58,91,34,69,120,97,109,112,108,101,69,114,114,111,114,115,46,73,110,118,97,108,105,100,78,97,109,101,34,93,125,44,34,101,120,101,99,117,116,101,34,58,123,34,112,97,114,97,109,101,116,101,114,68,101,112,101,110,100,101,110,99,105,101,115,34,58,91,123,34,118,97,108,117,101,34,58,34,101,120,97,109,112,108,101,82,101,113,117,101,115,116,68,84,79,34,44,34,116,121,112,101,34,58,34,69,120,97,109,112,108,101,82,101,113,117,101,115,116,68,84,79,34,125,93,44,34,115,116,97,116,101,109,101,110,116,115,34,58,91,123,34,99,111,110,115,116,68,101,99,111,109,112,111,115,105,116,105,111,110,34,58,123,34,110,97,109,101,115,34,58,91,34,110,97,109,101,34,93,44,34,101,118,97,108,117,97,116,105,111,110,34,58,123,34,114,101,103,117,108,97,114,69,118,97,108,117,97,116,105,111,110,34,58,123,34,116,121,112,101,34,58,34,118,97,114,105,97,98,108,101,34,44,34,118,97,108,117,101,34,58,34,101,120,97,109,112,108,101,82,101,113,117,101,115,116,68,84,79,34,125,125,125,125,93,125,125,125 | 123,34,72,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,34,58,34,116,121,112,101,32,72,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,82,101,115,112,111,110,115,101,32,61,32,88,79,82,60,72,101,108,108,111,87,111,114,108,100,82,101,115,112,111,110,115,101,68,84,79,44,32,72,101,108,108,111,87,111,114,108,100,69,114,114,111,114,115,46,73,110,118,97,108,105,100,78,97,109,101,62,59,101,120,112,111,114,116,32,99,108,97,115,115,32,72,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,32,105,109,112,108,101,109,101,110,116,115,32,85,115,101,67,97,115,101,60,72,101,108,108,111,87,111,114,108,100,82,101,113,117,101,115,116,68,84,79,44,32,80,114,111,109,105,115,101,60,72,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,82,101,115,112,111,110,115,101,62,62,32,123,97,115,121,110,99,32,101,120,101,99,117,116,101,40,104,101,108,108,111,87,111,114,108,100,82,101,113,117,101,115,116,68,84,79,58,72,101,108,108,111,87,111,114,108,100,82,101,113,117,101,115,116,68,84,79,41,58,32,80,114,111,109,105,115,101,60,72,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,82,101,115,112,111,110,115,101,62,32,123,99,111,110,115,116,32,123,32,110,97,109,101,32,125,32,61,32,104,101,108,108,111,87,111,114,108,100,82,101,113,117,101,115,116,68,84,79,59,125,125,34,44,34,69,120,97,109,112,108,101,85,115,101,67,97,115,101,34,58,34,116,121,112,101,32,69,120,97,109,112,108,101,85,115,101,67,97,115,101,82,101,115,112,111,110,115,101,32,61,32,88,79,82,60,69,120,97,109,112,108,101,82,101,115,112,111,110,115,101,68,84,79,44,32,69,120,97,109,112,108,101,69,114,114,111,114,115,46,73,110,118,97,108,105,100,78,97,109,101,62,59,101,120,112,111,114,116,32,99,108,97,115,115,32,69,120,97,109,112,108,101,85,115,101,67,97,115,101,32,105,109,112,108,101,109,101,110,116,115,32,85,115,101,67,97,115,101,60,69,120,97,109,112,108,101,82,101,113,117,101,115,116,68,84,79,44,32,80,114,111,109,105,115,101,60,69,120,97,109,112,108,101,85,115,101,67,97,115,101,82,101,115,112,111,110,115,101,62,62,32,123,97,115,121,110,99,32,101,120,101,99,117,116,101,40,101,120,97,109,112,108,101,82,101,113,117,101,115,116,68,84,79,58,69,120,97,109,112,108,101,82,101,113,117,101,115,116,68,84,79,41,58,32,80,114,111,109,105,115,101,60,69,120,97,109,112,108,101,85,115,101,67,97,115,101,82,101,115,112,111,110,115,101,62,32,123,99,111,110,115,116,32,123,32,110,97,109,101,32,125,32,61,32,101,120,97,109,112,108,101,82,101,113,117,101,115,116,68,84,79,59,125,125,34,125 | @bitloops-auto-generated |
        | 123,34,72,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,34,58,123,34,112,97,114,97,109,101,116,101,114,68,101,112,101,110,100,101,110,99,105,101,115,34,58,91,93,44,34,114,101,116,117,114,110,84,121,112,101,115,34,58,123,34,111,107,34,58,34,72,101,108,108,111,87,111,114,108,100,82,101,115,112,111,110,115,101,68,84,79,34,44,34,101,114,114,111,114,115,34,58,91,93,125,44,34,101,120,101,99,117,116,101,34,58,123,34,112,97,114,97,109,101,116,101,114,68,101,112,101,110,100,101,110,99,105,101,115,34,58,91,93,44,34,115,116,97,116,101,109,101,110,116,115,34,58,91,123,34,114,101,116,117,114,110,79,75,34,58,123,34,101,120,112,114,101,115,115,105,111,110,34,58,123,34,101,118,97,108,117,97,116,105,111,110,34,58,123,34,100,116,111,34,58,123,34,102,105,101,108,100,115,34,58,91,123,34,110,97,109,101,34,58,34,109,101,115,115,97,103,101,34,44,34,101,120,112,114,101,115,115,105,111,110,34,58,123,34,101,118,97,108,117,97,116,105,111,110,34,58,123,34,114,101,103,117,108,97,114,69,118,97,108,117,97,116,105,111,110,34,58,123,34,116,121,112,101,34,58,34,115,116,114,105,110,103,34,44,34,118,97,108,117,101,34,58,34,72,101,108,108,111,44,32,87,111,114,108,100,33,34,125,125,125,125,93,44,34,110,97,109,101,34,58,34,72,101,108,108,111,87,111,114,108,100,82,101,115,112,111,110,115,101,68,84,79,34,125,125,125,125,125,93,125,125,125 | 123,34,72,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,34,58,34,116,121,112,101,32,72,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,82,101,115,112,111,110,115,101,32,61,32,88,79,82,60,72,101,108,108,111,87,111,114,108,100,82,101,115,112,111,110,115,101,68,84,79,44,32,110,101,118,101,114,62,59,101,120,112,111,114,116,32,99,108,97,115,115,32,72,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,32,105,109,112,108,101,109,101,110,116,115,32,85,115,101,67,97,115,101,60,118,111,105,100,44,32,80,114,111,109,105,115,101,60,72,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,82,101,115,112,111,110,115,101,62,62,32,123,97,115,121,110,99,32,101,120,101,99,117,116,101,40,41,58,32,80,114,111,109,105,115,101,60,72,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,82,101,115,112,111,110,115,101,62,32,123,114,101,116,117,114,110,32,121,97,121,40,123,109,101,115,115,97,103,101,58,39,72,101,108,108,111,44,32,87,111,114,108,100,33,39,125,41,59,125,125,34,125 | @bitloops-auto-generated |
  