# https://docs.google.com/spreadsheets/d/1jT-5y8WRQA1gTBZoZm9-vXeoexUluoSD5ZS_rWs0BdQ/edit#gid=0
Feature: Controllers to Typescript target language

  Background:
    Given type is "TRESTController"
    And language is "TypeScript"

    Scenario Template: Controllers success to Typescript
    Given I have some controllers <controllers> and <serverType> of Controller in setup
    When I generate the code
    Then I should see the <output> code

   # Examples: # @bitloops-auto-generated
       # | controllers | serverType | output | @bitloops-auto-generated |
       # | {   "HelloWorldController": {     "parameterDependencies": [       {         "value": "helloWorldUseCase",         "type": "HelloWorldUseCase"       }     ],     "execute": {       "dependencies": [         "request",         "response"       ],       "statements": [         {           "constDeclaration": {             "name": "dto",             "type": "HelloWorldRequestDTO",             "expression": {               "struct": {                 "name": "StructName",                 "fields": [                   {                     "name": "name",                     "expression": {                       "evaluation": {                         "regularEvaluation": {                           "type": "variable",                           "value": "request.body.name"                         }                       }                     }                   }                 ]               }             }           }         },         {           "constDeclaration": {             "name": "result",             "expression": {               "evaluation": {                 "regularEvaluation": {                   "type": "method",                   "value": "helloWorldUseCase.execute",                   "argumentDependencies": [                     {                       "value": "dto",                       "type": "variable"                     }                   ]                 }               }             }           }         },         {           "ifStatement": {             "condition": {               "expression": {                 "evaluation": {                   "isInstanceOf": [                     {                       "value": "result",                       "type": "variable"                     },                     {                       "class": "Error"                     }                   ]                 }               }             },             "thenStatements": [               {                 "switchStatement": {                   "expression": {                     "evaluation": {                       "getClass": {                         "regularEvaluation": {                           "type": "variable",                           "value": "result"                         }                       }                     }                   },                   "cases": [                     {                       "caseValue":  "DomainErrors.InvalidName",                       "statements": [                         {                           "expression": {                             "evaluation": {                               "regularEvaluation": {                                 "type": "method",                                 "value": "this.clientError",                                 "argumentDependencies": [                                   {                                     "value": "response",                                     "type": "variable"                                   },                                   {                                     "value": "result.message",                                     "type": "variable"                                   }                                 ]                               }                             }                           }                         },                         "break"                       ]                     }                   ],                   "defaultCase": {                     "statements": [                       {                         "expression": {                           "evaluation": {                             "regularEvaluation": {                               "type": "method",                               "value": "this.error",                               "argumentDependencies": [                                 {                                   "value": "response",                                   "type": "variable"                                 },                                 {                                   "value": "result.message",                                   "type": "variable"                                 }                               ]                             }                           }                         }                       }                     ]                   }                 }               }             ],             "elseStatements": [               {                 "expression": {                   "evaluation": {                     "regularEvaluation": {                       "type": "method",                       "value": "this.ok",                       "argumentDependencies": [                         {                           "value": "response",                           "type": "variable"                         },                         {                           "value": "result",                           "type": "variable"                         }                       ]                     }                   }                 }               }             ]           }         }       ]     }   } } | REST.Fastify | import { Fastify } from '@bitloops/bl-boilerplate-infra-rest-fastify'; export class HelloWorldController extends Fastify.BaseController { private helloWorldUseCase: HelloWorldUseCase;constructor(helloWorldUseCase:HelloWorldUseCase) { super(); this.helloWorldUseCase = helloWorldUseCase; }async executeImpl(request: Fastify.Request, response: Fastify.Reply): Promise<void> { const dto: HelloWorldRequestDTO = {name:request.body.name}; const result = helloWorldUseCase.execute(dto); if (result.isOops()) {switch(result.constructor) {case DomainErrors.InvalidName: {this.clientError(response,result.message); break;} default: {this.error(response,result.message);}};}else {this.ok(response,result);}; }} | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | controllers | serverType | output | @bitloops-auto-generated |
        | 123,10,32,32,34,72,101,108,108,111,87,111,114,108,100,67,111,110,116,114,111,108,108,101,114,34,58,32,123,10,32,32,32,32,34,112,97,114,97,109,101,116,101,114,68,101,112,101,110,100,101,110,99,105,101,115,34,58,32,91,10,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,104,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,34,44,10,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,72,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,34,10,32,32,32,32,32,32,125,10,32,32,32,32,93,44,10,32,32,32,32,34,101,120,101,99,117,116,101,34,58,32,123,10,32,32,32,32,32,32,34,100,101,112,101,110,100,101,110,99,105,101,115,34,58,32,91,10,32,32,32,32,32,32,32,32,34,114,101,113,117,101,115,116,34,44,10,32,32,32,32,32,32,32,32,34,114,101,115,112,111,110,115,101,34,10,32,32,32,32,32,32,93,44,10,32,32,32,32,32,32,34,115,116,97,116,101,109,101,110,116,115,34,58,32,91,10,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,34,99,111,110,115,116,68,101,99,108,97,114,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,110,97,109,101,34,58,32,34,100,116,111,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,72,101,108,108,111,87,111,114,108,100,82,101,113,117,101,115,116,68,84,79,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,115,116,114,117,99,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,110,97,109,101,34,58,32,34,83,116,114,117,99,116,78,97,109,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,102,105,101,108,100,115,34,58,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,110,97,109,101,34,58,32,34,110,97,109,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,118,97,108,117,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,114,101,103,117,108,97,114,69,118,97,108,117,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,118,97,114,105,97,98,108,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,114,101,113,117,101,115,116,46,98,111,100,121,46,110,97,109,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,34,99,111,110,115,116,68,101,99,108,97,114,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,110,97,109,101,34,58,32,34,114,101,115,117,108,116,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,118,97,108,117,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,114,101,103,117,108,97,114,69,118,97,108,117,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,109,101,116,104,111,100,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,104,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,46,101,120,101,99,117,116,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,97,114,103,117,109,101,110,116,68,101,112,101,110,100,101,110,99,105,101,115,34,58,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,100,116,111,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,118,97,114,105,97,98,108,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,34,105,102,83,116,97,116,101,109,101,110,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,99,111,110,100,105,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,118,97,108,117,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,115,73,110,115,116,97,110,99,101,79,102,34,58,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,114,101,115,117,108,116,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,118,97,114,105,97,98,108,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,99,108,97,115,115,34,58,32,34,69,114,114,111,114,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,116,104,101,110,83,116,97,116,101,109,101,110,116,115,34,58,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,115,119,105,116,99,104,83,116,97,116,101,109,101,110,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,118,97,108,117,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,103,101,116,67,108,97,115,115,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,114,101,103,117,108,97,114,69,118,97,108,117,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,118,97,114,105,97,98,108,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,114,101,115,117,108,116,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,99,97,115,101,115,34,58,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,99,97,115,101,86,97,108,117,101,34,58,32,32,34,68,111,109,97,105,110,69,114,114,111,114,115,46,73,110,118,97,108,105,100,78,97,109,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,115,116,97,116,101,109,101,110,116,115,34,58,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,118,97,108,117,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,114,101,103,117,108,97,114,69,118,97,108,117,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,109,101,116,104,111,100,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,116,104,105,115,46,99,108,105,101,110,116,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,97,114,103,117,109,101,110,116,68,101,112,101,110,100,101,110,99,105,101,115,34,58,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,114,101,115,112,111,110,115,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,118,97,114,105,97,98,108,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,114,101,115,117,108,116,46,109,101,115,115,97,103,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,118,97,114,105,97,98,108,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,98,114,101,97,107,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,100,101,102,97,117,108,116,67,97,115,101,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,115,116,97,116,101,109,101,110,116,115,34,58,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,118,97,108,117,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,114,101,103,117,108,97,114,69,118,97,108,117,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,109,101,116,104,111,100,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,116,104,105,115,46,101,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,97,114,103,117,109,101,110,116,68,101,112,101,110,100,101,110,99,105,101,115,34,58,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,114,101,115,112,111,110,115,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,118,97,114,105,97,98,108,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,114,101,115,117,108,116,46,109,101,115,115,97,103,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,118,97,114,105,97,98,108,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,101,108,115,101,83,116,97,116,101,109,101,110,116,115,34,58,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,118,97,108,117,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,114,101,103,117,108,97,114,69,118,97,108,117,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,109,101,116,104,111,100,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,116,104,105,115,46,111,107,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,97,114,103,117,109,101,110,116,68,101,112,101,110,100,101,110,99,105,101,115,34,58,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,114,101,115,112,111,110,115,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,118,97,114,105,97,98,108,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,114,101,115,117,108,116,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,118,97,114,105,97,98,108,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,93,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,93,10,32,32,32,32,125,10,32,32,125,10,125 | 82,69,83,84,46,70,97,115,116,105,102,121 | 105,109,112,111,114,116,32,123,32,70,97,115,116,105,102,121,32,125,32,102,114,111,109,32,39,64,98,105,116,108,111,111,112,115,47,98,108,45,98,111,105,108,101,114,112,108,97,116,101,45,105,110,102,114,97,45,114,101,115,116,45,102,97,115,116,105,102,121,39,59,10,101,120,112,111,114,116,32,99,108,97,115,115,32,72,101,108,108,111,87,111,114,108,100,67,111,110,116,114,111,108,108,101,114,32,101,120,116,101,110,100,115,32,70,97,115,116,105,102,121,46,66,97,115,101,67,111,110,116,114,111,108,108,101,114,32,123,32,112,114,105,118,97,116,101,32,104,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,58,32,72,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,59,99,111,110,115,116,114,117,99,116,111,114,40,104,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,58,72,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,41,32,123,32,115,117,112,101,114,40,41,59,32,116,104,105,115,46,104,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,32,61,32,104,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,59,32,125,97,115,121,110,99,32,101,120,101,99,117,116,101,73,109,112,108,40,114,101,113,117,101,115,116,58,32,70,97,115,116,105,102,121,46,82,101,113,117,101,115,116,44,32,114,101,115,112,111,110,115,101,58,32,70,97,115,116,105,102,121,46,82,101,112,108,121,41,58,32,80,114,111,109,105,115,101,60,118,111,105,100,62,32,123,32,99,111,110,115,116,32,100,116,111,58,32,72,101,108,108,111,87,111,114,108,100,82,101,113,117,101,115,116,68,84,79,32,61,32,123,110,97,109,101,58,114,101,113,117,101,115,116,46,98,111,100,121,46,110,97,109,101,125,59,32,99,111,110,115,116,32,114,101,115,117,108,116,32,61,32,104,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,46,101,120,101,99,117,116,101,40,100,116,111,41,59,32,105,102,32,40,114,101,115,117,108,116,46,105,115,79,111,112,115,40,41,41,32,123,115,119,105,116,99,104,40,114,101,115,117,108,116,46,99,111,110,115,116,114,117,99,116,111,114,41,32,123,99,97,115,101,32,68,111,109,97,105,110,69,114,114,111,114,115,46,73,110,118,97,108,105,100,78,97,109,101,58,32,123,116,104,105,115,46,99,108,105,101,110,116,69,114,114,111,114,40,114,101,115,112,111,110,115,101,44,114,101,115,117,108,116,46,109,101,115,115,97,103,101,41,59,32,98,114,101,97,107,59,125,32,100,101,102,97,117,108,116,58,32,123,116,104,105,115,46,101,114,114,111,114,40,114,101,115,112,111,110,115,101,44,114,101,115,117,108,116,46,109,101,115,115,97,103,101,41,59,125,125,59,125,101,108,115,101,32,123,116,104,105,115,46,111,107,40,114,101,115,112,111,110,115,101,44,114,101,115,117,108,116,41,59,125,59,32,125,125 | @bitloops-auto-generated |
  