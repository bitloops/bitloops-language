RepoPort AccountWriteRepoPort<AccountEntity> extends CRUDWriteRepoPort;

Command WithdrawMoneyCommand {
    string accountId;
    int32 amount;
}

ApplicationError AccountNotFoundError(accountId: string)  {
    message: `User ${accountId} not found`,
    errorId: 'fedb1f53-6e89-429d-bc63-8f3adfc4b407',
}

Props AccountProps {
    string accountId;
    int32 balance;
}

Entity AccountEntity {
    static create(props: AccountProps): (OK(AccountEntity), Errors())  {
    }
}

CommandHandler WithdrawMoneyCommandHandler (accountRepo: AccountWriteRepoPort) {
    execute(command: WithdrawMoneyCommand): (OK(void), Errors(
       ApplicationErrors.AccountNotFoundError
       )) {
       
       const accountId = UUIDv4(command.accountId);
       const accountEntity = this.accountRepo.getById(accountId);;

       if(NOT accountEntity) {
           const result = "Account not found";
           return ApplicationErrors.AccountNotFoundError(command.accountId);
       }

       const result = "Account found"

       switch(animal) {
            case "dog":
                return "woof";
            case "cat":
                return "meow";
            default:
                return "unknown";
       }

       accountEntity.withdrawAmount(command.amount);
       return accountEntity;
   }
 }