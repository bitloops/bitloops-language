ApplicationError AccountNotFoundError(accountId: string)  {
    message: `User ${accountId} not found`,
    errorId: 'fedb1f53-6e89-429d-bc63-8f3adfc4b407',
}
Command WithdrawMoneyCommand {
    string[][] accountId;
    BalanceVO[] balance;
}
Props AccountProps {
    string[] accountId;
    BalanceVO[] balance;
}

ValueObject BalanceVO {
    static create(props: BalanceProps): (OK(BalanceVO), Errors()) {
    }
}

Props BalanceProps {
    int32 amount;
}

Entity AccountEntity {
    static create(props: AccountProps): (OK(AccountEntity), Errors())  {
    }
}


CommandHandler WithdrawMoneyCommandHandler (accountRepo: AccountWriteRepoPort) {
    execute(command: WithdrawMoneyCommand): (OK(void), Errors(
       ApplicationErrors.AccountNotFoundError
       )) {
    
    const accountEntity = AccountEntity.create({ accountId: command.accountId, balance: command.balance }).ifError();
     return accountEntity;
   }
 }