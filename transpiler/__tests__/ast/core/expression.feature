# https://docs.google.com/spreadsheets/d/10oDR2FGkILJ_nnO301fmncVObyrpGyxuDKTnViGIh3w/edit#gid=0

Feature: Expression

        Scenario Template: Expression is valid
        Given A valid expression <blString> string
        When I generate the model
        Then I should get <output>

   # Examples: # @bitloops-auto-generated
       # | blString | output | @bitloops-auto-generated |
       # | JestTestExpression { NOT true } | {   "expression": {     "logicalExpression": {       "notExpression": {         "expression": {           "literal": { "booleanLiteral": "true" }         }       }     }   } } | @bitloops-auto-generated |
       # | JestTestExpression { HelloWorldStruct({ message: 'Hello, World!' }) } | {   "expression": {     "evaluation": {       "struct": {         "fields": [           {             "evaluationField": {               "name": "message",               "expression": {                 "literal": { "stringLiteral": "Hello, World!" }               }             }           }         ],         "name": "HelloWorldStruct"       }     }   } } | @bitloops-auto-generated |
       # | JestTestExpression { (a OR b) AND c } | {   "expression": {     "logicalExpression": {       "andExpression": {         "left": {           "expression": {             "parenthesizedExpression": {               "expression": {                 "logicalExpression": {                   "orExpression": {                     "left": {                       "expression": {                         "identifier": "a"                       }                     },                     "right": {                       "expression": {                         "identifier": "b"                       }                     },                     "operator": "OR"                   }                 }               }             }           }         },         "right": {           "expression": {             "identifier": "c"           }         },         "operator": "AND"       }     }   } } | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | blString | output | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,78,79,84,32,116,114,117,101,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,108,111,103,105,99,97,108,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,110,111,116,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,32,34,98,111,111,108,101,97,110,76,105,116,101,114,97,108,34,58,32,34,116,114,117,101,34,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,72,101,108,108,111,87,111,114,108,100,83,116,114,117,99,116,40,123,32,109,101,115,115,97,103,101,58,32,39,72,101,108,108,111,44,32,87,111,114,108,100,33,39,32,125,41,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,101,118,97,108,117,97,116,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,115,116,114,117,99,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,102,105,101,108,100,115,34,58,32,91,10,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,101,118,97,108,117,97,116,105,111,110,70,105,101,108,100,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,110,97,109,101,34,58,32,34,109,101,115,115,97,103,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,32,34,115,116,114,105,110,103,76,105,116,101,114,97,108,34,58,32,34,72,101,108,108,111,44,32,87,111,114,108,100,33,34,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,93,44,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,58,32,34,72,101,108,108,111,87,111,114,108,100,83,116,114,117,99,116,34,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,40,97,32,79,82,32,98,41,32,65,78,68,32,99,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,108,111,103,105,99,97,108,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,97,110,100,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,101,110,116,104,101,115,105,122,101,100,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,108,111,103,105,99,97,108,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,111,114,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,97,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,114,105,103,104,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,98,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,111,112,101,114,97,116,111,114,34,58,32,34,79,82,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,114,105,103,104,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,99,34,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,111,112,101,114,97,116,111,114,34,58,32,34,65,78,68,34,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
  
        Scenario Template: Method call valid
        Given A valid method call <blString> string
        When I generate the model
        Then I should get <output>

   # Examples: # @bitloops-auto-generated
       # | blString | output | @bitloops-auto-generated |
       # | JestTestExpression { helloWorldUseCase.execute (dto)  } | {       "expression": {         "methodCallExpression": {           "expression": {             "memberDotExpression": {               "expression": {                 "identifier": "helloWorldUseCase"               },               "identifier": "execute"             }           },           "argumentList": [             {               "argument": {                 "expression": {                   "identifier": "dto"                 }               }             }           ]         }       }     } | @bitloops-auto-generated |
       # | JestTestExpression { helloWorldUseCase.execute ( dto , tismas ) } |  {       "expression": {         "methodCallExpression": {           "expression": {             "memberDotExpression": {               "expression": {                 "identifier": "helloWorldUseCase"               },               "identifier": "execute"             }           },           "argumentList": [             {               "argument": {                 "expression": {                   "identifier": "dto"                 }               }             },             {               "argument": {                 "expression": {                   "identifier": "tismas"                 }               }             }           ]         }       }     } | @bitloops-auto-generated |
       # | JestTestExpression { helloWorldUseCase.execute ( dto , 'tismas' )} | {       "expression": {         "methodCallExpression": {           "expression": {             "memberDotExpression": {               "expression": {                 "identifier": "helloWorldUseCase"               },               "identifier": "execute"             }           },           "argumentList": [             {               "argument": {                 "expression": {                   "identifier": "dto"                 }               }             },             {               "argument": {                 "expression": {                   "literal": {                     "stringLiteral": "tismas"                   }                 }               }             }           ]         }       }     } | @bitloops-auto-generated |
       # | JestTestExpression {helloWorldUseCase.execute() } |     {       "expression": {         "methodCallExpression": {           "expression": {             "memberDotExpression": {               "expression": {                 "identifier": "helloWorldUseCase"               },               "identifier": "execute"             }           },           "argumentList": []         }       }     } | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | blString | output | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,104,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,46,101,120,101,99,117,116,101,32,40,100,116,111,41,32,32,125 | 123,10,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,34,109,101,116,104,111,100,67,97,108,108,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,109,101,109,98,101,114,68,111,116,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,101,120,101,99,117,116,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,97,114,103,117,109,101,110,116,76,105,115,116,34,58,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,97,114,103,117,109,101,110,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,100,116,111,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,93,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125 | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,104,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,46,101,120,101,99,117,116,101,32,40,32,100,116,111,32,44,32,116,105,115,109,97,115,32,41,32,125 | 32,123,10,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,34,109,101,116,104,111,100,67,97,108,108,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,109,101,109,98,101,114,68,111,116,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,101,120,101,99,117,116,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,97,114,103,117,109,101,110,116,76,105,115,116,34,58,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,97,114,103,117,109,101,110,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,100,116,111,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,97,114,103,117,109,101,110,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,116,105,115,109,97,115,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,93,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125 | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,104,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,46,101,120,101,99,117,116,101,32,40,32,100,116,111,32,44,32,39,116,105,115,109,97,115,39,32,41,125 | 123,10,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,34,109,101,116,104,111,100,67,97,108,108,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,109,101,109,98,101,114,68,111,116,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,101,120,101,99,117,116,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,97,114,103,117,109,101,110,116,76,105,115,116,34,58,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,97,114,103,117,109,101,110,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,100,116,111,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,97,114,103,117,109,101,110,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,115,116,114,105,110,103,76,105,116,101,114,97,108,34,58,32,34,116,105,115,109,97,115,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,93,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125 | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,104,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,46,101,120,101,99,117,116,101,40,41,32,125 | 32,32,32,32,123,10,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,34,109,101,116,104,111,100,67,97,108,108,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,109,101,109,98,101,114,68,111,116,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,101,108,108,111,87,111,114,108,100,85,115,101,67,97,115,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,101,120,101,99,117,116,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,97,114,103,117,109,101,110,116,76,105,115,116,34,58,32,91,93,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125 | @bitloops-auto-generated |
  
        Scenario Template: Literal is valid
        Given A valid literal <blString> string
        When I generate the model
        Then I should get <output>

   # Examples: # @bitloops-auto-generated
       # | blString | output | @bitloops-auto-generated |
       # | JestTestExpression { 42 } | {   "expression": {     "literal": { "numericLiteral": { "integerLiteral": { "type": "int32", "value": "42" } } }   } } | @bitloops-auto-generated |
       # | JestTestExpression { "42" } | {   "expression": {     "literal": { "stringLiteral": "42" }   } }  | @bitloops-auto-generated |
       # | JestTestExpression { "A random string" } | {   "expression": {     "literal": { "stringLiteral": "A random string" }   } }  | @bitloops-auto-generated |
       # | JestTestExpression { true } | {   "expression": {     "literal": { "booleanLiteral": "true" }   } }  | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | blString | output | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,52,50,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,32,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,32,123,32,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,32,123,32,34,116,121,112,101,34,58,32,34,105,110,116,51,50,34,44,32,34,118,97,108,117,101,34,58,32,34,52,50,34,32,125,32,125,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,34,52,50,34,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,32,34,115,116,114,105,110,103,76,105,116,101,114,97,108,34,58,32,34,52,50,34,32,125,10,32,32,125,10,125,10 | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,34,65,32,114,97,110,100,111,109,32,115,116,114,105,110,103,34,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,32,34,115,116,114,105,110,103,76,105,116,101,114,97,108,34,58,32,34,65,32,114,97,110,100,111,109,32,115,116,114,105,110,103,34,32,125,10,32,32,125,10,125,10 | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,116,114,117,101,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,32,34,98,111,111,108,101,97,110,76,105,116,101,114,97,108,34,58,32,34,116,114,117,101,34,32,125,10,32,32,125,10,125,10 | @bitloops-auto-generated |
  
        Scenario Template: Identifier expression
        Given A valid identifier <blString> string
        When I generate the model
        Then I should get <output>

   # Examples: # @bitloops-auto-generated
       # | blString | output | @bitloops-auto-generated |
       # | JestTestExpression { helloWorld } | {"expression":{"identifier":"helloWorld"}} | @bitloops-auto-generated |
       # | JestTestExpression { PersonDTO } | {"expression":{"identifier":"PersonDTO"}} | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | blString | output | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,104,101,108,108,111,87,111,114,108,100,32,125 | 123,34,101,120,112,114,101,115,115,105,111,110,34,58,123,34,105,100,101,110,116,105,102,105,101,114,34,58,34,104,101,108,108,111,87,111,114,108,100,34,125,125 | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,80,101,114,115,111,110,68,84,79,32,125 | 123,34,101,120,112,114,101,115,115,105,111,110,34,58,123,34,105,100,101,110,116,105,102,105,101,114,34,58,34,80,101,114,115,111,110,68,84,79,34,125,125 | @bitloops-auto-generated |
  
        Scenario Template: Member dot expression
        Given A valid dot expression <blString> string
        When I generate the model
        Then I should get <output>

   # Examples: # @bitloops-auto-generated
       # | blString | output | @bitloops-auto-generated |
       # | JestTestExpression { this.hello } | {"expression":{"memberDotExpression":{"expression":{"thisExpression":"this"},"identifier":"hello"}}} | @bitloops-auto-generated |
       # | JestTestExpression { this.person.name } | {"expression":{"memberDotExpression":{"expression":{"memberDotExpression":{"expression":{"thisExpression":"this"},"identifier":"person"}},"identifier":"name"}}} | @bitloops-auto-generated |
       # | JestTestExpression { person.name } | {"expression":{"memberDotExpression":{"expression":{"identifier":"person"},"identifier":"name"}}} | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | blString | output | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,116,104,105,115,46,104,101,108,108,111,32,125 | 123,34,101,120,112,114,101,115,115,105,111,110,34,58,123,34,109,101,109,98,101,114,68,111,116,69,120,112,114,101,115,115,105,111,110,34,58,123,34,101,120,112,114,101,115,115,105,111,110,34,58,123,34,116,104,105,115,69,120,112,114,101,115,115,105,111,110,34,58,34,116,104,105,115,34,125,44,34,105,100,101,110,116,105,102,105,101,114,34,58,34,104,101,108,108,111,34,125,125,125 | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,116,104,105,115,46,112,101,114,115,111,110,46,110,97,109,101,32,125 | 123,34,101,120,112,114,101,115,115,105,111,110,34,58,123,34,109,101,109,98,101,114,68,111,116,69,120,112,114,101,115,115,105,111,110,34,58,123,34,101,120,112,114,101,115,115,105,111,110,34,58,123,34,109,101,109,98,101,114,68,111,116,69,120,112,114,101,115,115,105,111,110,34,58,123,34,101,120,112,114,101,115,115,105,111,110,34,58,123,34,116,104,105,115,69,120,112,114,101,115,115,105,111,110,34,58,34,116,104,105,115,34,125,44,34,105,100,101,110,116,105,102,105,101,114,34,58,34,112,101,114,115,111,110,34,125,125,44,34,105,100,101,110,116,105,102,105,101,114,34,58,34,110,97,109,101,34,125,125,125 | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,112,101,114,115,111,110,46,110,97,109,101,32,125 | 123,34,101,120,112,114,101,115,115,105,111,110,34,58,123,34,109,101,109,98,101,114,68,111,116,69,120,112,114,101,115,115,105,111,110,34,58,123,34,101,120,112,114,101,115,115,105,111,110,34,58,123,34,105,100,101,110,116,105,102,105,101,114,34,58,34,112,101,114,115,111,110,34,125,44,34,105,100,101,110,116,105,102,105,101,114,34,58,34,110,97,109,101,34,125,125,125 | @bitloops-auto-generated |
  
        Scenario Template: Assignment Expression
        Given A valid assignment expression <blString> string
        When I generate the model
        Then I should get <output>

   # Examples: # @bitloops-auto-generated
       # | blString | output | @bitloops-auto-generated |
       # | JestTestExpression { this.hello = "John Doe" } | {       "expression": {         "assignmentExpression": {           "left": {             "expression": {               "memberDotExpression": {                 "expression": {                   "thisExpression": "this"                 },                 "identifier": "hello"               }             }           },           "expression": {             "literal": {               "stringLiteral": "John Doe"             }           }         }       }     } | @bitloops-auto-generated |
       # | JestTestExpression { person.age = 42 } | {       "expression": {         "assignmentExpression": {           "left": {             "expression": {               "memberDotExpression": {                 "expression": {                   "identifier": "person"                 },                 "identifier": "age"               }             }           },           "expression": {             "literal": {               "numericLiteral": {                 "integerLiteral": {                   "type": "int32",                   "value": "42"                 }               }             }           }         }       }     } | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | blString | output | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,116,104,105,115,46,104,101,108,108,111,32,61,32,34,74,111,104,110,32,68,111,101,34,32,125 | 123,10,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,34,97,115,115,105,103,110,109,101,110,116,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,109,101,109,98,101,114,68,111,116,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,104,105,115,69,120,112,114,101,115,115,105,111,110,34,58,32,34,116,104,105,115,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,101,108,108,111,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,115,116,114,105,110,103,76,105,116,101,114,97,108,34,58,32,34,74,111,104,110,32,68,111,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125 | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,112,101,114,115,111,110,46,97,103,101,32,61,32,52,50,32,125 | 123,10,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,34,97,115,115,105,103,110,109,101,110,116,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,109,101,109,98,101,114,68,111,116,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,112,101,114,115,111,110,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,97,103,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,105,110,116,51,50,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,52,50,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125 | @bitloops-auto-generated |
  
        Scenario Template: Array Literal expression
        Given An array literal expression <blString> string
        When I generate the model
        Then I should get <output>

   # Examples: # @bitloops-auto-generated
       # | blString | output | @bitloops-auto-generated |
       # | JestTestExpression { [1, 2, 3] } | {"expression":{"arrayLiteral":[{"expression":{"literal":{"numericLiteral":{"integerLiteral":{"type":"int32","value":"1"}}}}},{"expression":{"literal":{"numericLiteral":{"integerLiteral":{"type":"int32","value":"2"}}}}},{"expression":{"literal":{"numericLiteral":{"integerLiteral":{"type":"int32","value":"3"}}}}}]}} | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | blString | output | @bitloops-auto-generated |
        | 74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,91,49,44,32,50,44,32,51,93,32,125 | 123,34,101,120,112,114,101,115,115,105,111,110,34,58,123,34,97,114,114,97,121,76,105,116,101,114,97,108,34,58,91,123,34,101,120,112,114,101,115,115,105,111,110,34,58,123,34,108,105,116,101,114,97,108,34,58,123,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,123,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,123,34,116,121,112,101,34,58,34,105,110,116,51,50,34,44,34,118,97,108,117,101,34,58,34,49,34,125,125,125,125,125,44,123,34,101,120,112,114,101,115,115,105,111,110,34,58,123,34,108,105,116,101,114,97,108,34,58,123,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,123,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,123,34,116,121,112,101,34,58,34,105,110,116,51,50,34,44,34,118,97,108,117,101,34,58,34,50,34,125,125,125,125,125,44,123,34,101,120,112,114,101,115,115,105,111,110,34,58,123,34,108,105,116,101,114,97,108,34,58,123,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,123,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,123,34,116,121,112,101,34,58,34,105,110,116,51,50,34,44,34,118,97,108,117,101,34,58,34,51,34,125,125,125,125,125,93,125,125 | @bitloops-auto-generated |
  
        Scenario Template: Additive Expression
        Given An additive expression <blString> string
        When I generate the model
        Then I should get <output>

   # Examples: # @bitloops-auto-generated
       # | blString | output | @bitloops-auto-generated |
       # |  JestTestExpression { 1 + 2 } | {   "expression": {     "additiveExpression": {       "left": {         "expression": {           "literal": {             "numericLiteral": {               "integerLiteral": {                 "type": "int32",                 "value": "1"               }             }           }         }       },       "right": {         "expression": {           "literal": {             "numericLiteral": {               "integerLiteral": {                 "type": "int32",                 "value": "2"               }             }           }         }       },       "operator": "+"     }   } } | @bitloops-auto-generated |
       # |  JestTestExpression { hello + hi } | {   "expression": {     "additiveExpression": {       "left": {         "expression": {           "identifier": "hello"         }       },       "right": {         "expression": {           "identifier": "hi"         }       },       "operator": "+"     }   } } | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | blString | output | @bitloops-auto-generated |
        | 32,74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,49,32,43,32,50,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,97,100,100,105,116,105,118,101,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,105,110,116,51,50,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,49,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,114,105,103,104,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,105,110,116,51,50,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,50,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,111,112,101,114,97,116,111,114,34,58,32,34,43,34,10,32,32,32,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
        | 32,74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,104,101,108,108,111,32,43,32,104,105,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,97,100,100,105,116,105,118,101,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,101,108,108,111,34,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,114,105,103,104,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,105,34,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,111,112,101,114,97,116,111,114,34,58,32,34,43,34,10,32,32,32,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
  
        Scenario Template: Multiplicative Expression
        Given A multiplicative expression <blString> string
        When I generate the model
        Then I should get <output>

   # Examples: # @bitloops-auto-generated
       # | blString | output | @bitloops-auto-generated |
       # |  JestTestExpression { 1 * 2 } | {   "expression": {     "multiplicativeExpression": {       "left": {         "expression": {           "literal": {             "numericLiteral": {               "integerLiteral": {                 "type": "int32",                 "value": "1"               }             }           }         }       },       "right": {         "expression": {           "literal": {             "numericLiteral": {               "integerLiteral": {                 "type": "int32",                 "value": "2"               }             }           }         }       },       "operator": "*"     }   } } | @bitloops-auto-generated |
       # |  JestTestExpression { hello * hi } | {   "expression": {     "multiplicativeExpression": {       "left": {         "expression": {           "identifier": "hello"         }       },       "right": {         "expression": {           "identifier": "hi"         }       },       "operator": "*"     }   } } | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | blString | output | @bitloops-auto-generated |
        | 32,74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,49,32,42,32,50,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,109,117,108,116,105,112,108,105,99,97,116,105,118,101,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,105,110,116,51,50,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,49,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,114,105,103,104,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,105,110,116,51,50,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,50,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,111,112,101,114,97,116,111,114,34,58,32,34,42,34,10,32,32,32,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
        | 32,74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,104,101,108,108,111,32,42,32,104,105,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,109,117,108,116,105,112,108,105,99,97,116,105,118,101,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,101,108,108,111,34,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,114,105,103,104,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,105,34,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,111,112,101,114,97,116,111,114,34,58,32,34,42,34,10,32,32,32,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
  
        Scenario Template: Relational Expression
        Given A relational expression <blString> string
        When I generate the model
        Then I should get <output>

   # Examples: # @bitloops-auto-generated
       # | blString | output | @bitloops-auto-generated |
       # |  JestTestExpression { 1 > 2 } | {   "expression": {     "relationalExpression": {       "left": {         "expression": {           "literal": {             "numericLiteral": {               "integerLiteral": {                 "type": "int32",                 "value": "1"               }             }           }         }       },       "right": {         "expression": {           "literal": {             "numericLiteral": {               "integerLiteral": {                 "type": "int32",                 "value": "2"               }             }           }         }       },       "operator": ">"     }   } } | @bitloops-auto-generated |
       # |  JestTestExpression { hello < hi } | {   "expression": {     "relationalExpression": {       "left": {         "expression": {           "identifier": "hello"         }       },       "right": {         "expression": {           "identifier": "hi"         }       },       "operator": "<"     }   } } | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | blString | output | @bitloops-auto-generated |
        | 32,74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,49,32,62,32,50,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,114,101,108,97,116,105,111,110,97,108,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,105,110,116,51,50,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,49,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,114,105,103,104,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,105,110,116,51,50,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,50,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,111,112,101,114,97,116,111,114,34,58,32,34,62,34,10,32,32,32,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
        | 32,74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,104,101,108,108,111,32,60,32,104,105,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,114,101,108,97,116,105,111,110,97,108,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,101,108,108,111,34,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,114,105,103,104,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,105,34,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,111,112,101,114,97,116,111,114,34,58,32,34,60,34,10,32,32,32,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
  
        Scenario Template: Equality Expression
        Given An equality expression <blString> string
        When I generate the model
        Then I should get <output>

   # Examples: # @bitloops-auto-generated
       # | blString | output | @bitloops-auto-generated |
       # |  JestTestExpression { 1 == 2 } | {   "expression": {     "equalityExpression": {       "left": {         "expression": {           "literal": {             "numericLiteral": {               "integerLiteral": {                 "type": "int32",                 "value": "1"               }             }           }         }       },       "right": {         "expression": {           "literal": {             "numericLiteral": {               "integerLiteral": {                 "type": "int32",                 "value": "2"               }             }           }         }       },       "operator": "=="     }   } } | @bitloops-auto-generated |
       # |  JestTestExpression { hello == hi } | {   "expression": {     "equalityExpression": {       "left": {         "expression": {           "identifier": "hello"         }       },       "right": {         "expression": {           "identifier": "hi"         }       },       "operator": "=="     }   } } | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | blString | output | @bitloops-auto-generated |
        | 32,74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,49,32,61,61,32,50,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,101,113,117,97,108,105,116,121,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,105,110,116,51,50,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,49,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,114,105,103,104,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,105,110,116,51,50,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,50,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,111,112,101,114,97,116,111,114,34,58,32,34,61,61,34,10,32,32,32,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
        | 32,74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,104,101,108,108,111,32,61,61,32,104,105,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,101,113,117,97,108,105,116,121,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,101,108,108,111,34,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,114,105,103,104,116,34,58,32,123,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,105,34,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,111,112,101,114,97,116,111,114,34,58,32,34,61,61,34,10,32,32,32,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
  
Scenario Template: Logical And Expression
        Given A logical and expression <blString> string
        When I generate the model
        Then I should get <output>

   # Examples: # @bitloops-auto-generated
       # | blString | output | @bitloops-auto-generated |
       # |  JestTestExpression { 1 AND 2 } | {   "expression": {     "logicalExpression": {       "andExpression": {         "left": {           "expression": {             "literal": {               "numericLiteral": {                 "integerLiteral": {                   "type": "int32",                   "value": "1"                 }               }             }           }         },         "right": {           "expression": {             "literal": {               "numericLiteral": {                 "integerLiteral": {                   "type": "int32",                   "value": "2"                 }               }             }           }         },         "operator": "AND"       }     }   } } | @bitloops-auto-generated |
       # |  JestTestExpression { hello AND hi } | {   "expression": {     "logicalExpression": {       "andExpression": {         "left": {           "expression": {             "identifier": "hello"           }         },         "right": {           "expression": {             "identifier": "hi"           }         },         "operator": "AND"       }     }   } } | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | blString | output | @bitloops-auto-generated |
        | 32,74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,49,32,65,78,68,32,50,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,108,111,103,105,99,97,108,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,97,110,100,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,105,110,116,51,50,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,49,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,114,105,103,104,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,105,110,116,51,50,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,50,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,111,112,101,114,97,116,111,114,34,58,32,34,65,78,68,34,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
        | 32,74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,104,101,108,108,111,32,65,78,68,32,104,105,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,108,111,103,105,99,97,108,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,97,110,100,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,101,108,108,111,34,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,114,105,103,104,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,105,34,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,111,112,101,114,97,116,111,114,34,58,32,34,65,78,68,34,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
  
Scenario Template: Logical Or Expression
        Given A logical or expression <blString> string
        When I generate the model
        Then I should get <output>

   # Examples: # @bitloops-auto-generated
       # | blString | output | @bitloops-auto-generated |
       # |  JestTestExpression { 1 OR 2 } | {   "expression": {     "logicalExpression": {       "orExpression": {         "left": {           "expression": {             "literal": {               "numericLiteral": {                 "integerLiteral": {                   "type": "int32",                   "value": "1"                 }               }             }           }         },         "right": {           "expression": {             "literal": {               "numericLiteral": {                 "integerLiteral": {                   "type": "int32",                   "value": "2"                 }               }             }           }         },         "operator": "OR"       }     }   } }  | @bitloops-auto-generated |
       # |  JestTestExpression { hello OR hi } | {   "expression": {     "logicalExpression": {       "orExpression": {         "left": {           "expression": {             "identifier": "hello"           }         },         "right": {           "expression": {             "identifier": "hi"           }         },         "operator": "OR"       }     }   } } | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | blString | output | @bitloops-auto-generated |
        | 32,74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,49,32,79,82,32,50,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,108,111,103,105,99,97,108,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,111,114,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,105,110,116,51,50,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,49,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,114,105,103,104,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,105,110,116,51,50,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,50,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,111,112,101,114,97,116,111,114,34,58,32,34,79,82,34,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,10,125,10 | @bitloops-auto-generated |
        | 32,74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,104,101,108,108,111,32,79,82,32,104,105,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,108,111,103,105,99,97,108,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,111,114,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,101,108,108,111,34,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,114,105,103,104,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,105,34,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,111,112,101,114,97,116,111,114,34,58,32,34,79,82,34,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
  
  Scenario Template: Logical Xor Expression
        Given A logical xor expression <blString> string
        When I generate the model
        Then I should get <output>

   # Examples: # @bitloops-auto-generated
       # | blString | output | @bitloops-auto-generated |
       # |  JestTestExpression { 1 XOR 2 } | {   "expression": {     "logicalExpression": {       "xorExpression": {         "left": {           "expression": {             "literal": {               "numericLiteral": {                 "integerLiteral": {                   "type": "int32",                   "value": "1"                 }               }             }           }         },         "right": {           "expression": {             "literal": {               "numericLiteral": {                 "integerLiteral": {                   "type": "int32",                   "value": "2"                 }               }             }           }         },         "operator": "XOR"       }     }   } } | @bitloops-auto-generated |
       # |  JestTestExpression { hello XOR hi } | {   "expression": {     "logicalExpression": {       "xorExpression": {         "left": {           "expression": {             "identifier": "hello"           }         },         "right": {           "expression": {             "identifier": "hi"           }         },         "operator": "XOR"       }     }   } } | @bitloops-auto-generated |
  
    Examples: # @bitloops-auto-generated
        | blString | output | @bitloops-auto-generated |
        | 32,74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,49,32,88,79,82,32,50,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,108,111,103,105,99,97,108,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,120,111,114,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,105,110,116,51,50,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,49,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,114,105,103,104,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,108,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,110,117,109,101,114,105,99,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,116,101,103,101,114,76,105,116,101,114,97,108,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,116,121,112,101,34,58,32,34,105,110,116,51,50,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,118,97,108,117,101,34,58,32,34,50,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,111,112,101,114,97,116,111,114,34,58,32,34,88,79,82,34,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
        | 32,74,101,115,116,84,101,115,116,69,120,112,114,101,115,115,105,111,110,32,123,32,104,101,108,108,111,32,88,79,82,32,104,105,32,125 | 123,10,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,34,108,111,103,105,99,97,108,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,34,120,111,114,69,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,34,108,101,102,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,101,108,108,111,34,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,114,105,103,104,116,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,34,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,105,100,101,110,116,105,102,105,101,114,34,58,32,34,104,105,34,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,111,112,101,114,97,116,111,114,34,58,32,34,88,79,82,34,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,10,125 | @bitloops-auto-generated |
  