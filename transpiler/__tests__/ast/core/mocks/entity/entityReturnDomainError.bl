Entity TodoEntity {    
    constructor(props: TodoProps): (OK(TodoEntity), Errors(DomainErrors.InvalidTitleError)) {           
        return TodoEntity(props);   
    } 

    public greet(): (OK(TodoEntity), Errors(DomainErrors.InvalidTitleError)) {
        return DomainErrors.InvalidTitleError();   
        // const entityRes = TodoEntity({id: 8, title: 'Super important'});
        // if (1 == 1) {
        //     return DomainErrors.InvalidTitleError(); 
        // } else {
        //     const entityRes = TodoEntity({id: 7, title: 'Super important'});
        //     return entityRes;
        // }  
    } 

    uncomplete(completed: bool): (OK(void), Errors()) {     
        this.completed = completed;
    } 
}